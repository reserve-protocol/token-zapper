{
  "address": "0x4365fAf4F47f73b28B5cB50B4D91294A564c4a79",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "deployFolioConfig",
          "type": "bytes"
        }
      ],
      "name": "deployFolio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc2915b8768189d996deb23550ea3cecf45317fe4b0b165aacf5e1954d288f1c2",
  "receipt": {
    "to": null,
    "from": "0xF2d98377d80DADf725bFb97E91357F1d81384De2",
    "contractAddress": "0x4365fAf4F47f73b28B5cB50B4D91294A564c4a79",
    "transactionIndex": 93,
    "gasUsed": "1628567",
    "logsBloom": "0x
    "blockHash": "0xf2b504bd1188c1b28235770f61e30dca36176e7ce6ee2ee65b8e652adcba1e45",
    "transactionHash": "0xc2915b8768189d996deb23550ea3cecf45317fe4b0b165aacf5e1954d288f1c2",
    "logs": [],
    "blockNumber": 25768191,
    "cumulativeGasUsed": "20606305",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "f647729f2952c948e8b0207450db4cd0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployFolioConfig\",\"type\":\"bytes\"}],\"name\":\"deployFolio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weiroll-helpers/DeployFolioHelper.sol\":\"DeployFolioHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\\n *\\n * _Available since v4.5._\\n */\\ninterface IVotes {\\n    /**\\n     * @dev Emitted when an account changes their delegate.\\n     */\\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\\n\\n    /**\\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\\n     */\\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\\n\\n    /**\\n     * @dev Returns the current amount of votes that `account` has.\\n     */\\n    function getVotes(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\\n     */\\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\\n     *\\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\\n     * vote.\\n     */\\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the delegate that `account` has chosen.\\n     */\\n    function delegates(address account) external view returns (address);\\n\\n    /**\\n     * @dev Delegates votes from the sender to `delegatee`.\\n     */\\n    function delegate(address delegatee) external;\\n\\n    /**\\n     * @dev Delegates votes from signer to `delegatee`.\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/IFolio.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { IVotes } from \\\"@openzeppelin/contracts/governance/utils/IVotes.sol\\\";\\n\\ninterface IFolio {\\n    // === Events ===\\n\\n    event AuctionApproved(uint256 indexed auctionId, address indexed from, address indexed to, Auction auction);\\n    event AuctionOpened(uint256 indexed auctionId, Auction auction);\\n    event AuctionBid(uint256 indexed auctionId, uint256 sellAmount, uint256 buyAmount);\\n    event AuctionClosed(uint256 indexed auctionId);\\n\\n    event FolioFeePaid(address indexed recipient, uint256 amount);\\n    event ProtocolFeePaid(address indexed recipient, uint256 amount);\\n\\n    event BasketTokenAdded(address indexed token);\\n    event BasketTokenRemoved(address indexed token);\\n    event TVLFeeSet(uint256 newFee, uint256 feeAnnually);\\n    event MintFeeSet(uint256 newFee);\\n    event FeeRecipientSet(address indexed recipient, uint96 portion);\\n    event AuctionDelaySet(uint256 newAuctionDelay);\\n    event AuctionLengthSet(uint256 newAuctionLength);\\n    event MandateSet(string newMandate);\\n    event FolioKilled();\\n\\n    // === Errors ===\\n\\n    error Folio__FolioKilled();\\n    error Folio__Unauthorized();\\n\\n    error Folio__EmptyAssets();\\n    error Folio__BasketModificationFailed();\\n\\n    error Folio__FeeRecipientInvalidAddress();\\n    error Folio__FeeRecipientInvalidFeeShare();\\n    error Folio__BadFeeTotal();\\n    error Folio__TVLFeeTooHigh();\\n    error Folio__TVLFeeTooLow();\\n    error Folio__MintFeeTooHigh();\\n    error Folio__ZeroInitialShares();\\n\\n    error Folio__InvalidAsset();\\n    error Folio__InvalidAssetAmount(address asset);\\n\\n    error Folio__InvalidAuctionLength();\\n    error Folio__InvalidSellLimit();\\n    error Folio__InvalidBuyLimit();\\n    error Folio__AuctionCannotBeOpened();\\n    error Folio__AuctionCannotBeOpenedPermissionlesslyYet();\\n    error Folio__AuctionNotOngoing();\\n    error Folio__AuctionCollision();\\n    error Folio__InvalidPrices();\\n    error Folio__AuctionTimeout();\\n    error Folio__SlippageExceeded();\\n    error Folio__InsufficientBalance();\\n    error Folio__InsufficientBid();\\n    error Folio__ExcessiveBid();\\n    error Folio__InvalidAuctionTokens();\\n    error Folio__InvalidAuctionDelay();\\n    error Folio__InvalidAuctionTTL();\\n    error Folio__TooManyFeeRecipients();\\n    error Folio__InvalidArrayLengths();\\n\\n    // === Structures ===\\n\\n    struct FolioBasicDetails {\\n        string name;\\n        string symbol;\\n        address[] assets;\\n        uint256[] amounts; // {tok}\\n        uint256 initialShares; // {share}\\n    }\\n\\n    struct FolioAdditionalDetails {\\n        uint256 auctionDelay; // {s}\\n        uint256 auctionLength; // {s}\\n        FeeRecipient[] feeRecipients;\\n        uint256 tvlFee; // D18{1/s}\\n        uint256 mintFee; // D18{1}\\n        string mandate;\\n    }\\n\\n    struct FeeRecipient {\\n        address recipient;\\n        uint96 portion; // D18{1}\\n    }\\n\\n    struct BasketRange {\\n        uint256 spot; // D27{buyTok/share}\\n        uint256 low; // D27{buyTok/share} inclusive\\n        uint256 high; // D27{buyTok/share} inclusive\\n    }\\n\\n    struct Prices {\\n        uint256 start; // D27{buyTok/sellTok}\\n        uint256 end; // D27{buyTok/sellTok}\\n    }\\n\\n    /// Auction states:\\n    ///   - APPROVED: start == 0 && end == 0\\n    ///   - OPEN: block.timestamp >= start && block.timestamp <= end\\n    ///   - CLOSED: block.timestamp > end\\n    struct Auction {\\n        uint256 id;\\n        IERC20 sell;\\n        IERC20 buy;\\n        BasketRange sellLimit; // D27{sellTok/share} min ratio of sell token in the basket, inclusive\\n        BasketRange buyLimit; // D27{buyTok/share} max ratio of buy token in the basket, exclusive\\n        Prices prices; // D27{buyTok/sellTok}\\n        uint256 availableAt; // {s} inclusive\\n        uint256 launchTimeout; // {s} inclusive\\n        uint256 start; // {s} inclusive\\n        uint256 end; // {s} inclusive\\n        // === Gas optimization ===\\n        uint256 k; // D18{1} price = startPrice * e ^ -kt\\n    }\\n\\n    function distributeFees() external;\\n}\\n\\n\\ninterface IGovernanceDeployer {\\n    struct GovParams {\\n        // Basic Parameters\\n        uint48 votingDelay; // {s}\\n        uint32 votingPeriod; // {s}\\n        uint256 proposalThreshold; // D18{1}\\n        uint256 quorumPercent; // in percent, e.g 4 for 4%\\n        uint256 timelockDelay; // {s}\\n        // Roles\\n        address[] guardians; // Canceller Role\\n    }\\n\\n    function deployGovernanceWithTimelock(\\n        IGovernanceDeployer.GovParams calldata govParams,\\n        IVotes stToken\\n    ) external returns (address governor, address timelock);\\n}\\n\\nstruct GovRoles {\\n  address[] existingTradeProposers;\\n  address[] tradeLaunchers;\\n  address[] vibesOfficers;\\n}\\n\\n\\ninterface IFolioDeployer {\\n  error FolioDeployer__LengthMismatch();\\n\\n  event FolioDeployed(address indexed folioOwner, address indexed folio, address folioAdmin);\\n  event GovernedFolioDeployed(\\n      address indexed stToken,\\n      address indexed folio,\\n      address ownerGovernor,\\n      address ownerTimelock,\\n      address tradingGovernor,\\n      address tradingTimelock\\n  );\\n\\n\\n  function folioImplementation() external view returns (address);\\n\\n\\n  function deployFolio(\\n    IFolio.FolioBasicDetails calldata basicDetails,\\n    IFolio.FolioAdditionalDetails calldata additionalDetails,\\n    address owner,\\n    address[] memory auctionApprovers,\\n    address[] memory auctionLaunchers,\\n    address[] memory brandManagers\\n  ) external returns (address folio, address proxyAdmin);\\n\\n  function deployGovernedFolio(\\n    IVotes stToken,\\n    IFolio.FolioBasicDetails calldata basicDetails,\\n    IFolio.FolioAdditionalDetails calldata additionalDetails,\\n    IGovernanceDeployer.GovParams calldata ownerGovParams,\\n    IGovernanceDeployer.GovParams calldata tradingGovParams,\\n    GovRoles calldata govRoles\\n  )\\n    external\\n    returns (\\n        address folio,\\n        address proxyAdmin,\\n        address ownerGovernor,\\n        address ownerTimelock,\\n        address tradingGovernor,\\n        address tradingTimelock\\n    );\\n\\n\\n}\\n\",\"keccak256\":\"0x478e4be53fe01ba784fc0f154a2f8b0047eb8d15e886b67213f7560eeaaa7671\",\"license\":\"MIT\"},\"contracts/weiroll-helpers/DeployFolioHelper.sol\":{\"content\":\"\\n// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { IFolio, IVotes, GovRoles, IFolioDeployer, IGovernanceDeployer } from \\\"../IFolio.sol\\\";\\n\\nstruct DeployFolioConfig {\\n  address deployer;\\n  address expectedTokenAddress;\\n  IFolio.FolioBasicDetails basicDetails;\\n  IFolio.FolioAdditionalDetails additionalDetails;\\n  GovRoles govRoles;\\n\\n  bool isGoverned;\\n  IVotes stToken;\\n  address owner;\\n  IGovernanceDeployer.GovParams ownerGovParams;\\n  IGovernanceDeployer.GovParams tradingGovParams;\\n}\\n\\ninterface IDeployFolioHelper {\\n  function deployFolio(DeployFolioConfig memory config) external returns (uint256);\\n}\\n\\ncontract DeployFolioHelper {\\n  function deployFolio(\\n    bytes memory deployFolioConfig\\n  ) external returns (uint256) {\\n    DeployFolioConfig memory config = abi.decode(deployFolioConfig, (DeployFolioConfig));\\n\\n    uint256 initialShares = type(uint256).max;\\n    for (uint256 i = 0; i < config.basicDetails.assets.length; i++) {\\n      uint256 balance = IERC20(config.basicDetails.assets[i]).balanceOf(address(this));\\n      if (balance == 0) {\\n        revert('ZERO BALANCE');\\n      }\\n      uint256 quantityPrShare = config.basicDetails.amounts[i];\\n      uint256 shares = balance * 1e18 / quantityPrShare;\\n      if (shares < initialShares) {\\n        initialShares = shares;\\n      }\\n    }\\n    if (initialShares == type(uint256).max) {\\n      revert('NO SHARES');\\n    }\\n    config.basicDetails.initialShares = initialShares;\\n\\n    if (config.isGoverned) {\\n      (address folio, , , , ,) = IFolioDeployer(config.deployer).deployGovernedFolio(\\n        config.stToken,\\n        config.basicDetails,\\n        config.additionalDetails,\\n        config.ownerGovParams,\\n        config.tradingGovParams,\\n        config.govRoles\\n      );\\n      if (folio != config.expectedTokenAddress) {\\n        revert('EXPECTED != ACTUAL');\\n      }\\n      return IERC20(folio).balanceOf(address(this));\\n    } else {\\n      (address folio, ) = IFolioDeployer(config.deployer).deployFolio(\\n        config.basicDetails,\\n        config.additionalDetails,\\n        config.owner,\\n        config.govRoles.existingTradeProposers,\\n        config.govRoles.tradeLaunchers,\\n        config.govRoles.vibesOfficers\\n      );\\n      if (folio != config.expectedTokenAddress) {\\n        revert('EXPECTED != ACTUAL');\\n      }\\n      return IERC20(folio).balanceOf(address(this));\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xa813d0a39e991f2f3e7533565c2c1fbea250f4f8d27ce29a8af74e71a52ae50a\",\"license\":\"BlueOak-1.0.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c8e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639ce96e1514610030575b600080fd5b61004a60048036038101906100459190610722565b610060565b6040516100579190610784565b60405180910390f35b60008082806020019051810190610077919061119a565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b8260400151604001515181101561020157600083604001516040015182815181106100cf576100ce6111e3565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161010f9190611221565b602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610150919061123c565b905060008103610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906112c6565b60405180910390fd5b600084604001516060015183815181106101b2576101b16111e3565b5b60200260200101519050600081670de0b6b3a7640000846101d39190611315565b6101dd9190611386565b9050848110156101eb578094505b50505080806101f9906113b7565b9150506100a1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b9061144b565b60405180910390fd5b80826040015160800181815250508160a001511561041f576000826000015173ffffffffffffffffffffffffffffffffffffffff1663281c186f8460c001518560400151866060015187610100015188610120015189608001516040518763ffffffff1660e01b81526004016102df969594939291906119a8565b60c0604051808303816000875af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611a2c565b50505050509050826020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290611b05565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d49190611221565b602060405180830381865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610415919061123c565b93505050506105c3565b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663e45a297d846040015185606001518660e001518760800151600001518860800151602001518960800151604001516040518763ffffffff1660e01b815260040161048c96959493929190611b94565b60408051808303816000875af11580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190611c18565b509050826020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611b05565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161057c9190611221565b602060405180830381865afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd919061123c565b93505050505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61062f826105e6565b810181811067ffffffffffffffff8211171561064e5761064d6105f7565b5b80604052505050565b60006106616105c8565b905061066d8282610626565b919050565b600067ffffffffffffffff82111561068d5761068c6105f7565b5b610696826105e6565b9050602081019050919050565b82818337600083830152505050565b60006106c56106c084610672565b610657565b9050828152602081018484840111156106e1576106e06105e1565b5b6106ec8482856106a3565b509392505050565b600082601f830112610709576107086105dc565b5b81356107198482602086016106b2565b91505092915050565b600060208284031215610738576107376105d2565b5b600082013567ffffffffffffffff811115610756576107556105d7565b5b610762848285016106f4565b91505092915050565b6000819050919050565b61077e8161076b565b82525050565b60006020820190506107996000830184610775565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d4826107a9565b9050919050565b6107e4816107c9565b81146107ef57600080fd5b50565b600081519050610801816107db565b92915050565b600067ffffffffffffffff821115610822576108216105f7565b5b61082b826105e6565b9050602081019050919050565b60005b8381101561085657808201518184015260208101905061083b565b60008484015250505050565b600061087561087084610807565b610657565b905082815260208101848484011115610891576108906105e1565b5b61089c848285610838565b509392505050565b600082601f8301126108b9576108b86105dc565b5b81516108c9848260208601610862565b91505092915050565b600067ffffffffffffffff8211156108ed576108ec6105f7565b5b602082029050602081019050919050565b600080fd5b6000610916610911846108d2565b610657565b90508083825260208201905060208402830185811115610939576109386108fe565b5b835b81811015610962578061094e88826107f2565b84526020840193505060208101905061093b565b5050509392505050565b600082601f830112610981576109806105dc565b5b8151610991848260208601610903565b91505092915050565b600067ffffffffffffffff8211156109b5576109b46105f7565b5b602082029050602081019050919050565b6109cf8161076b565b81146109da57600080fd5b50565b6000815190506109ec816109c6565b92915050565b6000610a05610a008461099a565b610657565b90508083825260208201905060208402830185811115610a2857610a276108fe565b5b835b81811015610a515780610a3d88826109dd565b845260208401935050602081019050610a2a565b5050509392505050565b600082601f830112610a7057610a6f6105dc565b5b8151610a808482602086016109f2565b91505092915050565b600060a08284031215610a9f57610a9e61079f565b5b610aa960a0610657565b9050600082015167ffffffffffffffff811115610ac957610ac86107a4565b5b610ad5848285016108a4565b600083015250602082015167ffffffffffffffff811115610af957610af86107a4565b5b610b05848285016108a4565b602083015250604082015167ffffffffffffffff811115610b2957610b286107a4565b5b610b358482850161096c565b604083015250606082015167ffffffffffffffff811115610b5957610b586107a4565b5b610b6584828501610a5b565b6060830152506080610b79848285016109dd565b60808301525092915050565b600067ffffffffffffffff821115610ba057610b9f6105f7565b5b602082029050602081019050919050565b60006bffffffffffffffffffffffff82169050919050565b610bd281610bb1565b8114610bdd57600080fd5b50565b600081519050610bef81610bc9565b92915050565b600060408284031215610c0b57610c0a61079f565b5b610c156040610657565b90506000610c25848285016107f2565b6000830152506020610c3984828501610be0565b60208301525092915050565b6000610c58610c5384610b85565b610657565b90508083825260208201905060408402830185811115610c7b57610c7a6108fe565b5b835b81811015610ca45780610c908882610bf5565b845260208401935050604081019050610c7d565b5050509392505050565b600082601f830112610cc357610cc26105dc565b5b8151610cd3848260208601610c45565b91505092915050565b600060c08284031215610cf257610cf161079f565b5b610cfc60c0610657565b90506000610d0c848285016109dd565b6000830152506020610d20848285016109dd565b602083015250604082015167ffffffffffffffff811115610d4457610d436107a4565b5b610d5084828501610cae565b6040830152506060610d64848285016109dd565b6060830152506080610d78848285016109dd565b60808301525060a082015167ffffffffffffffff811115610d9c57610d9b6107a4565b5b610da8848285016108a4565b60a08301525092915050565b600060608284031215610dca57610dc961079f565b5b610dd46060610657565b9050600082015167ffffffffffffffff811115610df457610df36107a4565b5b610e008482850161096c565b600083015250602082015167ffffffffffffffff811115610e2457610e236107a4565b5b610e308482850161096c565b602083015250604082015167ffffffffffffffff811115610e5457610e536107a4565b5b610e608482850161096c565b60408301525092915050565b60008115159050919050565b610e8181610e6c565b8114610e8c57600080fd5b50565b600081519050610e9e81610e78565b92915050565b6000610eaf826107c9565b9050919050565b610ebf81610ea4565b8114610eca57600080fd5b50565b600081519050610edc81610eb6565b92915050565b600065ffffffffffff82169050919050565b610efd81610ee2565b8114610f0857600080fd5b50565b600081519050610f1a81610ef4565b92915050565b600063ffffffff82169050919050565b610f3981610f20565b8114610f4457600080fd5b50565b600081519050610f5681610f30565b92915050565b600060c08284031215610f7257610f7161079f565b5b610f7c60c0610657565b90506000610f8c84828501610f0b565b6000830152506020610fa084828501610f47565b6020830152506040610fb4848285016109dd565b6040830152506060610fc8848285016109dd565b6060830152506080610fdc848285016109dd565b60808301525060a082015167ffffffffffffffff81111561100057610fff6107a4565b5b61100c8482850161096c565b60a08301525092915050565b6000610140828403121561102f5761102e61079f565b5b61103a610140610657565b9050600061104a848285016107f2565b600083015250602061105e848285016107f2565b602083015250604082015167ffffffffffffffff811115611082576110816107a4565b5b61108e84828501610a89565b604083015250606082015167ffffffffffffffff8111156110b2576110b16107a4565b5b6110be84828501610cdc565b606083015250608082015167ffffffffffffffff8111156110e2576110e16107a4565b5b6110ee84828501610db4565b60808301525060a061110284828501610e8f565b60a08301525060c061111684828501610ecd565b60c08301525060e061112a848285016107f2565b60e08301525061010082015167ffffffffffffffff81111561114f5761114e6107a4565b5b61115b84828501610f5c565b6101008301525061012082015167ffffffffffffffff811115611181576111806107a4565b5b61118d84828501610f5c565b6101208301525092915050565b6000602082840312156111b0576111af6105d2565b5b600082015167ffffffffffffffff8111156111ce576111cd6105d7565b5b6111da84828501611018565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61121b816107c9565b82525050565b60006020820190506112366000830184611212565b92915050565b600060208284031215611252576112516105d2565b5b6000611260848285016109dd565b91505092915050565b600082825260208201905092915050565b7f5a45524f2042414c414e43450000000000000000000000000000000000000000600082015250565b60006112b0600c83611269565b91506112bb8261127a565b602082019050919050565b600060208201905081810360008301526112df816112a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113208261076b565b915061132b8361076b565b92508282026113398161076b565b915082820484148315176113505761134f6112e6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113918261076b565b915061139c8361076b565b9250826113ac576113ab611357565b5b828204905092915050565b60006113c28261076b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113f4576113f36112e6565b5b600182019050919050565b7f4e4f205348415245530000000000000000000000000000000000000000000000600082015250565b6000611435600983611269565b9150611440826113ff565b602082019050919050565b6000602082019050818103600083015261146481611428565b9050919050565b6000819050919050565b600061149061148b611486846107a9565b61146b565b6107a9565b9050919050565b60006114a282611475565b9050919050565b60006114b482611497565b9050919050565b6114c4816114a9565b82525050565b600081519050919050565b600082825260208201905092915050565b60006114f1826114ca565b6114fb81856114d5565b935061150b818560208601610838565b611514816105e6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611554816107c9565b82525050565b6000611566838361154b565b60208301905092915050565b6000602082019050919050565b600061158a8261151f565b611594818561152a565b935061159f8361153b565b8060005b838110156115d05781516115b7888261155a565b97506115c283611572565b9250506001810190506115a3565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116128161076b565b82525050565b60006116248383611609565b60208301905092915050565b6000602082019050919050565b6000611648826115dd565b61165281856115e8565b935061165d836115f9565b8060005b8381101561168e5781516116758882611618565b975061168083611630565b925050600181019050611661565b5085935050505092915050565b600060a08301600083015184820360008601526116b882826114e6565b915050602083015184820360208601526116d282826114e6565b915050604083015184820360408601526116ec828261157f565b91505060608301518482036060860152611706828261163d565b915050608083015161171b6080860182611609565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61175b81610bb1565b82525050565b604082016000820151611777600085018261154b565b50602082015161178a6020850182611752565b50505050565b600061179c8383611761565b60408301905092915050565b6000602082019050919050565b60006117c082611726565b6117ca8185611731565b93506117d583611742565b8060005b838110156118065781516117ed8882611790565b97506117f8836117a8565b9250506001810190506117d9565b5085935050505092915050565b600060c08301600083015161182b6000860182611609565b50602083015161183e6020860182611609565b506040830151848203604086015261185682826117b5565b915050606083015161186b6060860182611609565b50608083015161187e6080860182611609565b5060a083015184820360a086015261189682826114e6565b9150508091505092915050565b6118ac81610ee2565b82525050565b6118bb81610f20565b82525050565b600060c0830160008301516118d960008601826118a3565b5060208301516118ec60208601826118b2565b5060408301516118ff6040860182611609565b5060608301516119126060860182611609565b5060808301516119256080860182611609565b5060a083015184820360a086015261193d828261157f565b9150508091505092915050565b60006060830160008301518482036000860152611967828261157f565b91505060208301518482036020860152611981828261157f565b9150506040830151848203604086015261199b828261157f565b9150508091505092915050565b600060c0820190506119bd60008301896114bb565b81810360208301526119cf818861169b565b905081810360408301526119e38187611813565b905081810360608301526119f781866118c1565b90508181036080830152611a0b81856118c1565b905081810360a0830152611a1f818461194a565b9050979650505050505050565b60008060008060008060c08789031215611a4957611a486105d2565b5b6000611a5789828a016107f2565b9650506020611a6889828a016107f2565b9550506040611a7989828a016107f2565b9450506060611a8a89828a016107f2565b9350506080611a9b89828a016107f2565b92505060a0611aac89828a016107f2565b9150509295509295509295565b7f455850454354454420213d2041435455414c0000000000000000000000000000600082015250565b6000611aef601283611269565b9150611afa82611ab9565b602082019050919050565b60006020820190508181036000830152611b1e81611ae2565b9050919050565b600082825260208201905092915050565b6000611b418261151f565b611b4b8185611b25565b9350611b568361153b565b8060005b83811015611b87578151611b6e888261155a565b9750611b7983611572565b925050600181019050611b5a565b5085935050505092915050565b600060c0820190508181036000830152611bae818961169b565b90508181036020830152611bc28188611813565b9050611bd16040830187611212565b8181036060830152611be38186611b36565b90508181036080830152611bf78185611b36565b905081810360a0830152611c0b8184611b36565b9050979650505050505050565b60008060408385031215611c2f57611c2e6105d2565b5b6000611c3d858286016107f2565b9250506020611c4e858286016107f2565b915050925092905056fea2646970667358221220d6e44a6a3d6ecc5dbc481b81fd6949e4d0819e574660a046ab845ed34cec584264736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639ce96e1514610030575b600080fd5b61004a60048036038101906100459190610722565b610060565b6040516100579190610784565b60405180910390f35b60008082806020019051810190610077919061119a565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b8260400151604001515181101561020157600083604001516040015182815181106100cf576100ce6111e3565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161010f9190611221565b602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610150919061123c565b905060008103610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906112c6565b60405180910390fd5b600084604001516060015183815181106101b2576101b16111e3565b5b60200260200101519050600081670de0b6b3a7640000846101d39190611315565b6101dd9190611386565b9050848110156101eb578094505b50505080806101f9906113b7565b9150506100a1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b9061144b565b60405180910390fd5b80826040015160800181815250508160a001511561041f576000826000015173ffffffffffffffffffffffffffffffffffffffff1663281c186f8460c001518560400151866060015187610100015188610120015189608001516040518763ffffffff1660e01b81526004016102df969594939291906119a8565b60c0604051808303816000875af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611a2c565b50505050509050826020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290611b05565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d49190611221565b602060405180830381865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610415919061123c565b93505050506105c3565b6000826000015173ffffffffffffffffffffffffffffffffffffffff1663e45a297d846040015185606001518660e001518760800151600001518860800151602001518960800151604001516040518763ffffffff1660e01b815260040161048c96959493929190611b94565b60408051808303816000875af11580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190611c18565b509050826020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611b05565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161057c9190611221565b602060405180830381865afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd919061123c565b93505050505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61062f826105e6565b810181811067ffffffffffffffff8211171561064e5761064d6105f7565b5b80604052505050565b60006106616105c8565b905061066d8282610626565b919050565b600067ffffffffffffffff82111561068d5761068c6105f7565b5b610696826105e6565b9050602081019050919050565b82818337600083830152505050565b60006106c56106c084610672565b610657565b9050828152602081018484840111156106e1576106e06105e1565b5b6106ec8482856106a3565b509392505050565b600082601f830112610709576107086105dc565b5b81356107198482602086016106b2565b91505092915050565b600060208284031215610738576107376105d2565b5b600082013567ffffffffffffffff811115610756576107556105d7565b5b610762848285016106f4565b91505092915050565b6000819050919050565b61077e8161076b565b82525050565b60006020820190506107996000830184610775565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d4826107a9565b9050919050565b6107e4816107c9565b81146107ef57600080fd5b50565b600081519050610801816107db565b92915050565b600067ffffffffffffffff821115610822576108216105f7565b5b61082b826105e6565b9050602081019050919050565b60005b8381101561085657808201518184015260208101905061083b565b60008484015250505050565b600061087561087084610807565b610657565b905082815260208101848484011115610891576108906105e1565b5b61089c848285610838565b509392505050565b600082601f8301126108b9576108b86105dc565b5b81516108c9848260208601610862565b91505092915050565b600067ffffffffffffffff8211156108ed576108ec6105f7565b5b602082029050602081019050919050565b600080fd5b6000610916610911846108d2565b610657565b90508083825260208201905060208402830185811115610939576109386108fe565b5b835b81811015610962578061094e88826107f2565b84526020840193505060208101905061093b565b5050509392505050565b600082601f830112610981576109806105dc565b5b8151610991848260208601610903565b91505092915050565b600067ffffffffffffffff8211156109b5576109b46105f7565b5b602082029050602081019050919050565b6109cf8161076b565b81146109da57600080fd5b50565b6000815190506109ec816109c6565b92915050565b6000610a05610a008461099a565b610657565b90508083825260208201905060208402830185811115610a2857610a276108fe565b5b835b81811015610a515780610a3d88826109dd565b845260208401935050602081019050610a2a565b5050509392505050565b600082601f830112610a7057610a6f6105dc565b5b8151610a808482602086016109f2565b91505092915050565b600060a08284031215610a9f57610a9e61079f565b5b610aa960a0610657565b9050600082015167ffffffffffffffff811115610ac957610ac86107a4565b5b610ad5848285016108a4565b600083015250602082015167ffffffffffffffff811115610af957610af86107a4565b5b610b05848285016108a4565b602083015250604082015167ffffffffffffffff811115610b2957610b286107a4565b5b610b358482850161096c565b604083015250606082015167ffffffffffffffff811115610b5957610b586107a4565b5b610b6584828501610a5b565b6060830152506080610b79848285016109dd565b60808301525092915050565b600067ffffffffffffffff821115610ba057610b9f6105f7565b5b602082029050602081019050919050565b60006bffffffffffffffffffffffff82169050919050565b610bd281610bb1565b8114610bdd57600080fd5b50565b600081519050610bef81610bc9565b92915050565b600060408284031215610c0b57610c0a61079f565b5b610c156040610657565b90506000610c25848285016107f2565b6000830152506020610c3984828501610be0565b60208301525092915050565b6000610c58610c5384610b85565b610657565b90508083825260208201905060408402830185811115610c7b57610c7a6108fe565b5b835b81811015610ca45780610c908882610bf5565b845260208401935050604081019050610c7d565b5050509392505050565b600082601f830112610cc357610cc26105dc565b5b8151610cd3848260208601610c45565b91505092915050565b600060c08284031215610cf257610cf161079f565b5b610cfc60c0610657565b90506000610d0c848285016109dd565b6000830152506020610d20848285016109dd565b602083015250604082015167ffffffffffffffff811115610d4457610d436107a4565b5b610d5084828501610cae565b6040830152506060610d64848285016109dd565b6060830152506080610d78848285016109dd565b60808301525060a082015167ffffffffffffffff811115610d9c57610d9b6107a4565b5b610da8848285016108a4565b60a08301525092915050565b600060608284031215610dca57610dc961079f565b5b610dd46060610657565b9050600082015167ffffffffffffffff811115610df457610df36107a4565b5b610e008482850161096c565b600083015250602082015167ffffffffffffffff811115610e2457610e236107a4565b5b610e308482850161096c565b602083015250604082015167ffffffffffffffff811115610e5457610e536107a4565b5b610e608482850161096c565b60408301525092915050565b60008115159050919050565b610e8181610e6c565b8114610e8c57600080fd5b50565b600081519050610e9e81610e78565b92915050565b6000610eaf826107c9565b9050919050565b610ebf81610ea4565b8114610eca57600080fd5b50565b600081519050610edc81610eb6565b92915050565b600065ffffffffffff82169050919050565b610efd81610ee2565b8114610f0857600080fd5b50565b600081519050610f1a81610ef4565b92915050565b600063ffffffff82169050919050565b610f3981610f20565b8114610f4457600080fd5b50565b600081519050610f5681610f30565b92915050565b600060c08284031215610f7257610f7161079f565b5b610f7c60c0610657565b90506000610f8c84828501610f0b565b6000830152506020610fa084828501610f47565b6020830152506040610fb4848285016109dd565b6040830152506060610fc8848285016109dd565b6060830152506080610fdc848285016109dd565b60808301525060a082015167ffffffffffffffff81111561100057610fff6107a4565b5b61100c8482850161096c565b60a08301525092915050565b6000610140828403121561102f5761102e61079f565b5b61103a610140610657565b9050600061104a848285016107f2565b600083015250602061105e848285016107f2565b602083015250604082015167ffffffffffffffff811115611082576110816107a4565b5b61108e84828501610a89565b604083015250606082015167ffffffffffffffff8111156110b2576110b16107a4565b5b6110be84828501610cdc565b606083015250608082015167ffffffffffffffff8111156110e2576110e16107a4565b5b6110ee84828501610db4565b60808301525060a061110284828501610e8f565b60a08301525060c061111684828501610ecd565b60c08301525060e061112a848285016107f2565b60e08301525061010082015167ffffffffffffffff81111561114f5761114e6107a4565b5b61115b84828501610f5c565b6101008301525061012082015167ffffffffffffffff811115611181576111806107a4565b5b61118d84828501610f5c565b6101208301525092915050565b6000602082840312156111b0576111af6105d2565b5b600082015167ffffffffffffffff8111156111ce576111cd6105d7565b5b6111da84828501611018565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61121b816107c9565b82525050565b60006020820190506112366000830184611212565b92915050565b600060208284031215611252576112516105d2565b5b6000611260848285016109dd565b91505092915050565b600082825260208201905092915050565b7f5a45524f2042414c414e43450000000000000000000000000000000000000000600082015250565b60006112b0600c83611269565b91506112bb8261127a565b602082019050919050565b600060208201905081810360008301526112df816112a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113208261076b565b915061132b8361076b565b92508282026113398161076b565b915082820484148315176113505761134f6112e6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113918261076b565b915061139c8361076b565b9250826113ac576113ab611357565b5b828204905092915050565b60006113c28261076b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113f4576113f36112e6565b5b600182019050919050565b7f4e4f205348415245530000000000000000000000000000000000000000000000600082015250565b6000611435600983611269565b9150611440826113ff565b602082019050919050565b6000602082019050818103600083015261146481611428565b9050919050565b6000819050919050565b600061149061148b611486846107a9565b61146b565b6107a9565b9050919050565b60006114a282611475565b9050919050565b60006114b482611497565b9050919050565b6114c4816114a9565b82525050565b600081519050919050565b600082825260208201905092915050565b60006114f1826114ca565b6114fb81856114d5565b935061150b818560208601610838565b611514816105e6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611554816107c9565b82525050565b6000611566838361154b565b60208301905092915050565b6000602082019050919050565b600061158a8261151f565b611594818561152a565b935061159f8361153b565b8060005b838110156115d05781516115b7888261155a565b97506115c283611572565b9250506001810190506115a3565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116128161076b565b82525050565b60006116248383611609565b60208301905092915050565b6000602082019050919050565b6000611648826115dd565b61165281856115e8565b935061165d836115f9565b8060005b8381101561168e5781516116758882611618565b975061168083611630565b925050600181019050611661565b5085935050505092915050565b600060a08301600083015184820360008601526116b882826114e6565b915050602083015184820360208601526116d282826114e6565b915050604083015184820360408601526116ec828261157f565b91505060608301518482036060860152611706828261163d565b915050608083015161171b6080860182611609565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61175b81610bb1565b82525050565b604082016000820151611777600085018261154b565b50602082015161178a6020850182611752565b50505050565b600061179c8383611761565b60408301905092915050565b6000602082019050919050565b60006117c082611726565b6117ca8185611731565b93506117d583611742565b8060005b838110156118065781516117ed8882611790565b97506117f8836117a8565b9250506001810190506117d9565b5085935050505092915050565b600060c08301600083015161182b6000860182611609565b50602083015161183e6020860182611609565b506040830151848203604086015261185682826117b5565b915050606083015161186b6060860182611609565b50608083015161187e6080860182611609565b5060a083015184820360a086015261189682826114e6565b9150508091505092915050565b6118ac81610ee2565b82525050565b6118bb81610f20565b82525050565b600060c0830160008301516118d960008601826118a3565b5060208301516118ec60208601826118b2565b5060408301516118ff6040860182611609565b5060608301516119126060860182611609565b5060808301516119256080860182611609565b5060a083015184820360a086015261193d828261157f565b9150508091505092915050565b60006060830160008301518482036000860152611967828261157f565b91505060208301518482036020860152611981828261157f565b9150506040830151848203604086015261199b828261157f565b9150508091505092915050565b600060c0820190506119bd60008301896114bb565b81810360208301526119cf818861169b565b905081810360408301526119e38187611813565b905081810360608301526119f781866118c1565b90508181036080830152611a0b81856118c1565b905081810360a0830152611a1f818461194a565b9050979650505050505050565b60008060008060008060c08789031215611a4957611a486105d2565b5b6000611a5789828a016107f2565b9650506020611a6889828a016107f2565b9550506040611a7989828a016107f2565b9450506060611a8a89828a016107f2565b9350506080611a9b89828a016107f2565b92505060a0611aac89828a016107f2565b9150509295509295509295565b7f455850454354454420213d2041435455414c0000000000000000000000000000600082015250565b6000611aef601283611269565b9150611afa82611ab9565b602082019050919050565b60006020820190508181036000830152611b1e81611ae2565b9050919050565b600082825260208201905092915050565b6000611b418261151f565b611b4b8185611b25565b9350611b568361153b565b8060005b83811015611b87578151611b6e888261155a565b9750611b7983611572565b925050600181019050611b5a565b5085935050505092915050565b600060c0820190508181036000830152611bae818961169b565b90508181036020830152611bc28188611813565b9050611bd16040830187611212565b8181036060830152611be38186611b36565b90508181036080830152611bf78185611b36565b905081810360a0830152611c0b8184611b36565b9050979650505050505050565b60008060408385031215611c2f57611c2e6105d2565b5b6000611c3d858286016107f2565b9250506020611c4e858286016107f2565b915050925092905056fea2646970667358221220d6e44a6a3d6ecc5dbc481b81fd6949e4d0819e574660a046ab845ed34cec584264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}