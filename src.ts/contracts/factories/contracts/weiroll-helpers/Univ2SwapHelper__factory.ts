/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Univ2SwapHelper,
  Univ2SwapHelperInterface,
} from "../../../contracts/weiroll-helpers/Univ2SwapHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapOnPoolWithFeeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOutput",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611664806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c2018891461003b57806390712b071461006b575b600080fd5b61005560048036038101906100509190610bb5565b61009b565b6040516100629190610c2b565b60405180910390f35b61008560048036038101906100809190610c7e565b61033c565b6040516100929190610c2b565b60405180910390f35b60006100a88486846105ae565b60006100b48585610634565b50905060008060008873ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b9190610d67565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000808573ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161461018d578284610190565b83835b91509150818a73ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b81526004016101ce9190610dc9565b602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f9190610df9565b6102199190610e55565b9450610226858383610760565b9650505050506000808373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461026a5784600061026e565b6000855b915091508873ffffffffffffffffffffffffffffffffffffffff1663022c0d9f838330600067ffffffffffffffff8111156102ac576102ab610e89565b5b6040519080825280601f01601f1916602001820160405280156102de5781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016102fe9493929190610f48565b600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b5050505050505050949350505050565b60008060008673ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610d67565b50915091506103c08588866105ae565b85156104b7576103f184836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff16610760565b92508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f60008530600067ffffffffffffffff81111561042e5761042d610e89565b5b6040519080825280601f01601f1916602001820160405280156104605781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016104809493929190610fd9565b600060405180830381600087803b15801561049a57600080fd5b505af11580156104ae573d6000803e3d6000fd5b505050506105a4565b6104e284826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff16610760565b92508673ffffffffffffffffffffffffffffffffffffffff1663022c0d9f84600030600067ffffffffffffffff81111561051f5761051e610e89565b5b6040519080825280601f01601f1916602001820160405280156105515781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016105719493929190611025565b600060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050505b5050949350505050565b61062f8363a9059cbb60e01b84846040516024016105cd929190611071565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061084a565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c9061111d565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106106df5782846106e2565b83835b8092508193505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611189565b60405180910390fd5b9250929050565b60008084116107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b9061121b565b60405180910390fd5b6000831180156107b45750600082115b6107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea906112ad565b60405180910390fd5b60006103e58561080391906112cd565b90506000838261081391906112cd565b90506000826103e88761082691906112cd565b610830919061130f565b9050808261083e9190611372565b93505050509392505050565b60006108ac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109119092919063ffffffff16565b905060008151111561090c57808060200190518101906108cc91906113b8565b61090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290611457565b60405180910390fd5b5b505050565b60606109208484600085610929565b90509392505050565b60608247101561096e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610965906114e9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516109979190611545565b60006040518083038185875af1925050503d80600081146109d4576040519150601f19603f3d011682016040523d82523d6000602084013e6109d9565b606091505b50915091506109ea878383876109f6565b92505050949350505050565b60608315610a58576000835103610a5057610a1085610a6b565b610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a46906115a8565b60405180910390fd5b5b829050610a63565b610a628383610a8e565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610aa15781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad5919061160c565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0e82610ae3565b9050919050565b6000610b2082610b03565b9050919050565b610b3081610b15565b8114610b3b57600080fd5b50565b600081359050610b4d81610b27565b92915050565b610b5c81610b03565b8114610b6757600080fd5b50565b600081359050610b7981610b53565b92915050565b6000819050919050565b610b9281610b7f565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b60008060008060808587031215610bcf57610bce610ade565b5b6000610bdd87828801610b3e565b9450506020610bee87828801610b6a565b9350506040610bff87828801610b6a565b9250506060610c1087828801610ba0565b91505092959194509250565b610c2581610b7f565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b60008115159050919050565b610c5b81610c46565b8114610c6657600080fd5b50565b600081359050610c7881610c52565b92915050565b60008060008060808587031215610c9857610c97610ade565b5b6000610ca687828801610b6a565b9450506020610cb787828801610c69565b9350506040610cc887828801610b6a565b9250506060610cd987828801610ba0565b91505092959194509250565b60006dffffffffffffffffffffffffffff82169050919050565b610d0881610ce5565b8114610d1357600080fd5b50565b600081519050610d2581610cff565b92915050565b600063ffffffff82169050919050565b610d4481610d2b565b8114610d4f57600080fd5b50565b600081519050610d6181610d3b565b92915050565b600080600060608486031215610d8057610d7f610ade565b5b6000610d8e86828701610d16565b9350506020610d9f86828701610d16565b9250506040610db086828701610d52565b9150509250925092565b610dc381610b03565b82525050565b6000602082019050610dde6000830184610dba565b92915050565b600081519050610df381610b89565b92915050565b600060208284031215610e0f57610e0e610ade565b5b6000610e1d84828501610de4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6082610b7f565b9150610e6b83610b7f565b9250828203905081811115610e8357610e82610e26565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015610ef2578082015181840152602081019050610ed7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f1a82610eb8565b610f248185610ec3565b9350610f34818560208601610ed4565b610f3d81610efe565b840191505092915050565b6000608082019050610f5d6000830187610c1c565b610f6a6020830186610c1c565b610f776040830185610dba565b8181036060830152610f898184610f0f565b905095945050505050565b6000819050919050565b6000819050919050565b6000610fc3610fbe610fb984610f94565b610f9e565b610b7f565b9050919050565b610fd381610fa8565b82525050565b6000608082019050610fee6000830187610fca565b610ffb6020830186610c1c565b6110086040830185610dba565b818103606083015261101a8184610f0f565b905095945050505050565b600060808201905061103a6000830187610c1c565b6110476020830186610fca565b6110546040830185610dba565b81810360608301526110668184610f0f565b905095945050505050565b60006040820190506110866000830185610dba565b6110936020830184610c1c565b9392505050565b600082825260208201905092915050565b7f556e697377617056324c6962726172793a204944454e544943414c5f4144445260008201527f4553534553000000000000000000000000000000000000000000000000000000602082015250565b600061110760258361109a565b9150611112826110ab565b604082019050919050565b60006020820190508181036000830152611136816110fa565b9050919050565b7f556e697377617056324c6962726172793a205a45524f5f414444524553530000600082015250565b6000611173601e8361109a565b915061117e8261113d565b602082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f4960008201527f4e5055545f414d4f554e54000000000000000000000000000000000000000000602082015250565b6000611205602b8361109a565b9150611210826111a9565b604082019050919050565b60006020820190508181036000830152611234816111f8565b9050919050565b7f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60008201527f4951554944495459000000000000000000000000000000000000000000000000602082015250565b600061129760288361109a565b91506112a28261123b565b604082019050919050565b600060208201905081810360008301526112c68161128a565b9050919050565b60006112d882610b7f565b91506112e383610b7f565b92508282026112f181610b7f565b9150828204841483151761130857611307610e26565b5b5092915050565b600061131a82610b7f565b915061132583610b7f565b925082820190508082111561133d5761133c610e26565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061137d82610b7f565b915061138883610b7f565b92508261139857611397611343565b5b828204905092915050565b6000815190506113b281610c52565b92915050565b6000602082840312156113ce576113cd610ade565b5b60006113dc848285016113a3565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611441602a8361109a565b915061144c826113e5565b604082019050919050565b6000602082019050818103600083015261147081611434565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006114d360268361109a565b91506114de82611477565b604082019050919050565b60006020820190508181036000830152611502816114c6565b9050919050565b600081905092915050565b600061151f82610eb8565b6115298185611509565b9350611539818560208601610ed4565b80840191505092915050565b60006115518284611514565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611592601d8361109a565b915061159d8261155c565b602082019050919050565b600060208201905081810360008301526115c181611585565b9050919050565b600081519050919050565b60006115de826115c8565b6115e8818561109a565b93506115f8818560208601610ed4565b61160181610efe565b840191505092915050565b6000602082019050818103600083015261162681846115d3565b90509291505056fea26469706673582212200b2443863433368ec3bd2d051b45e13d2f5832ff0cdabc71d4167ad6a8c76e4364736f6c63430008110033";

type Univ2SwapHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Univ2SwapHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Univ2SwapHelper__factory extends ContractFactory {
  constructor(...args: Univ2SwapHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Univ2SwapHelper> {
    return super.deploy(overrides || {}) as Promise<Univ2SwapHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Univ2SwapHelper {
    return super.attach(address) as Univ2SwapHelper;
  }
  override connect(signer: Signer): Univ2SwapHelper__factory {
    return super.connect(signer) as Univ2SwapHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Univ2SwapHelperInterface {
    return new utils.Interface(_abi) as Univ2SwapHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Univ2SwapHelper {
    return new Contract(address, _abi, signerOrProvider) as Univ2SwapHelper;
  }
}
