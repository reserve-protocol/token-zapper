/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRETHRouter,
  IRETHRouterInterface,
} from "../../../contracts/IRETHRouter.sol/IRETHRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_steps",
        type: "uint256",
      },
    ],
    name: "optimiseSwapFrom",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "portions",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_steps",
        type: "uint256",
      },
    ],
    name: "optimiseSwapTo",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "portions",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_uniswapPortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balancerPortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minTokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_idealTokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensIn",
        type: "uint256",
      },
    ],
    name: "swapFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_uniswapPortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balancerPortion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minTokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_idealTokensOut",
        type: "uint256",
      },
    ],
    name: "swapTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IRETHRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IRETHRouterInterface {
    return new utils.Interface(_abi) as IRETHRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRETHRouter {
    return new Contract(address, _abi, signerOrProvider) as IRETHRouter;
  }
}
