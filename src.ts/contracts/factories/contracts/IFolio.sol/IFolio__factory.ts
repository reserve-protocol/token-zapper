/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFolio,
  IFolioInterface,
} from "../../../contracts/IFolio.sol/IFolio";

const _abi = [
  {
    inputs: [],
    name: "Folio__AuctionCannotBeOpened",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__AuctionCannotBeOpenedPermissionlesslyYet",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__AuctionCollision",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__AuctionNotOngoing",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__AuctionTimeout",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__BadFeeTotal",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__BasketModificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__EmptyAssets",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__ExcessiveBid",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__FeeRecipientInvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__FeeRecipientInvalidFeeShare",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__FolioKilled",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InsufficientBid",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidArrayLengths",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Folio__InvalidAssetAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidAuctionDelay",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidAuctionLength",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidAuctionTTL",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidAuctionTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidBuyLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidPrices",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__InvalidSellLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__MintFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__SlippageExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__TVLFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__TVLFeeTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__TooManyFeeRecipients",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "Folio__ZeroInitialShares",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "sell",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buy",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "low",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "high",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.BasketRange",
            name: "sellLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "low",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "high",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.BasketRange",
            name: "buyLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.Prices",
            name: "prices",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "availableAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "launchTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IFolio.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "AuctionApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
    ],
    name: "AuctionBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "AuctionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newAuctionDelay",
        type: "uint256",
      },
    ],
    name: "AuctionDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newAuctionLength",
        type: "uint256",
      },
    ],
    name: "AuctionLengthSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "sell",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buy",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "low",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "high",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.BasketRange",
            name: "sellLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "low",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "high",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.BasketRange",
            name: "buyLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.Prices",
            name: "prices",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "availableAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "launchTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "k",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IFolio.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "AuctionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BasketTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BasketTokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "portion",
        type: "uint96",
      },
    ],
    name: "FeeRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FolioFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FolioKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newMandate",
        type: "string",
      },
    ],
    name: "MandateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "MintFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProtocolFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAnnually",
        type: "uint256",
      },
    ],
    name: "TVLFeeSet",
    type: "event",
  },
  {
    inputs: [],
    name: "distributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFolio__factory {
  static readonly abi = _abi;
  static createInterface(): IFolioInterface {
    return new utils.Interface(_abi) as IFolioInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IFolio {
    return new Contract(address, _abi, signerOrProvider) as IFolio;
  }
}
