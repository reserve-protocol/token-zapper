/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMaverickV2Router,
  IMaverickV2RouterInterface,
} from "../../../contracts/Maverick.sol/IMaverickV2Router";

const _abi = [
  {
    inputs: [],
    name: "RouterNotFactoryPool",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "RouterTooLittleReceived",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "RouterTooMuchRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterZeroSwap",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "exactInputMultiHop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "tokenAIn",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "argsPacked",
        type: "bytes",
      },
    ],
    name: "exactInputSinglePackedArgs",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IMaverickV2Router__factory {
  static readonly abi = _abi;
  static createInterface(): IMaverickV2RouterInterface {
    return new utils.Interface(_abi) as IMaverickV2RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMaverickV2Router {
    return new Contract(address, _abi, signerOrProvider) as IMaverickV2Router;
  }
}
