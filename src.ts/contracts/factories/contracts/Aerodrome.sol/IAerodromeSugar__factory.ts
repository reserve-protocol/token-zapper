/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAerodromeSugar,
  IAerodromeSugarInterface,
} from "../../../contracts/Aerodrome.sol/IAerodromeSugar";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "forSwaps",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lp",
            type: "address",
          },
          {
            internalType: "int24",
            name: "poolType",
            type: "int24",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "poolFee",
            type: "uint256",
          },
        ],
        internalType: "struct SwapLp[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAerodromeSugar__factory {
  static readonly abi = _abi;
  static createInterface(): IAerodromeSugarInterface {
    return new utils.Interface(_abi) as IAerodromeSugarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAerodromeSugar {
    return new Contract(address, _abi, signerOrProvider) as IAerodromeSugar;
  }
}
