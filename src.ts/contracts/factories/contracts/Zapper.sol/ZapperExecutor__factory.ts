/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ZapperExecutor,
  ZapperExecutorInterface,
} from "../../../contracts/Zapper.sol/ZapperExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "command_index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "ExecutionFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "assertEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "assertLarger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "commands",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "state",
        type: "bytes[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "execute",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "dust",
            type: "uint256[]",
          },
        ],
        internalType: "struct ExecuteOutput",
        name: "out",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scale",
        type: "uint256",
      },
    ],
    name: "fpMul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FacadeRead",
        name: "facade",
        type: "address",
      },
      {
        internalType: "contract RToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintMaxRToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "rawCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "out",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506000303f90508060a081815250505060805160a0516126eb61007d600039600081816103ce01526104870152600050506126eb6000f3fe60806040526004361061008a5760003560e01c806394919ce81161005957806394919ce81461016b57806398a38d7d14610194578063ad207fd7146101d2578063b67d77c51461020f578063d47b0de41461024c57610091565b806308c4b49814610096578063298e2c9e146100c65780633b177fc214610103578063771602f71461012e57610091565b3661009157005b600080fd5b6100b060048036038101906100ab9190611554565b610289565b6040516100bd91906116f2565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e89190611740565b610437565b6040516100fa919061179b565b60405180910390f35b34801561010f57600080fd5b50610118610485565b60405161012591906117cf565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190611740565b6104a9565b60405161016291906117f9565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d91906118bc565b6104bf565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190611965565b6105b4565b6040516101c9929190611a58565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f49190611740565b6106a2565b604051610206919061179b565b60405180910390f35b34801561021b57600080fd5b5061023660048036038101906102319190611740565b6106f0565b60405161024391906117f9565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190611a88565b610706565b60405161028091906117f9565b60405180910390f35b610291611173565b61029c858585610728565b50815167ffffffffffffffff8111156102b8576102b7611210565b5b6040519080825280602002602001820160405280156102e65781602001602082028036833780820191505090505b50816000018190525060005b82518110156103c55782818151811061030e5761030d611adb565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161034e9190611b19565b602060405180830381865afa15801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f9190611b49565b826000015182815181106103a6576103a5611adb565b5b60200260200101818152505080806103bd90611ba5565b9150506102f2565b506000303f90507f0000000000000000000000000000000000000000000000000000000000000000811461042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590611c70565b60405180910390fd5b50949350505050565b600081831161047b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047290611cdc565b60405180910390fd5b6001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081836104b79190611cfc565b905092915050565b60008373ffffffffffffffffffffffffffffffffffffffff16631c3debf484306040518363ffffffff1660e01b81526004016104fc929190611d8f565b6020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190611b49565b90508273ffffffffffffffffffffffffffffffffffffffff16631207f0c183836040518363ffffffff1660e01b815260040161057c929190611db8565b600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b5050505050505050565b600060603073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d90611e53565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1685858560405161064e929190611ea3565b60006040518083038185875af1925050503d806000811461068b576040519150601f19603f3d011682016040523d82523d6000602084013e610690565b606091505b50809250819350505094509492505050565b60008183146106e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dd90611f08565b60405180910390fd5b6001905092915050565b600081836106fe9190611f28565b905092915050565b60008183856107159190611f5c565b61071f9190611fcd565b90509392505050565b60606000806000806060600089899050905060005b81811015610b90578a8a8281811061075857610757611adb565b5b905060200201359650602087901b60f81c60ff169550600060808716146107a6578a8a828061078690611ba5565b935081811061079857610797611adb565b5b9050602002013594506107d0565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff602888901b60001c1760001b94505b60006003871603610865578660001c73ffffffffffffffffffffffffffffffffffffffff1661080a88878c610ba19092919063ffffffff16565b604051610817919061202f565b600060405180830381855af49150503d8060008114610852576040519150601f19603f3d011682016040523d82523d6000602084013e610857565b606091505b508094508195505050610ae6565b600160038716036108fc578660001c73ffffffffffffffffffffffffffffffffffffffff1661089f88878c610ba19092919063ffffffff16565b6040516108ac919061202f565b6000604051808303816000865af19150503d80600081146108e9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ee565b606091505b508094508195505050610ae5565b60026003871603610991578660001c73ffffffffffffffffffffffffffffffffffffffff1661093688878c610ba19092919063ffffffff16565b604051610943919061202f565b600060405180830381855afa9150503d806000811461097e576040519150601f19603f3d011682016040523d82523d6000602084013e610983565b606091505b508094508195505050610ae4565b600380871603610aa8576000808a8760f81c60ff16815181106109b7576109b6611adb565b5b602002602001015190506020815114610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc906120b8565b60405180910390fd5b602081015191508860001c73ffffffffffffffffffffffffffffffffffffffff1682610a498b60ff60088c901b60001c1760001b8f610ba19092919063ffffffff16565b604051610a56919061202f565b60006040518083038185875af1925050503d8060008114610a93576040519150601f19603f3d011682016040523d82523d6000602084013e610a98565b606091505b5080965081975050505050610ae3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada90612124565b60405180910390fd5b5b5b5b83610b4057600083511115610afc576044830192505b808760001c846040517fef3dcb2f000000000000000000000000000000000000000000000000000000008152600401610b3793929190612188565b60405180910390fd5b60006040871614610b6957610b64605888901b848b610f059092919063ffffffff16565b610b85565b610b82605888901b848b610fba9092919063ffffffff16565b98505b80600101905061073d565b508796505050505050509392505050565b606060008060606000805b6020811015610d4557868160208110610bc857610bc7611adb565b5b1a60f81b60f81c60ff16915060ff820315610d455760006080831614610cc35760fe8203610c30576000835103610c1c5788604051602001610c0a91906122d2565b60405160208183030381529060405292505b825185610c299190611cfc565b9450610cbe565b600089607f841681518110610c4857610c47611adb565b5b60200260200101515190506000602082610c6291906122f4565b14610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990612397565b60405180910390fd5b602081610caf9190611cfc565b86610cba9190611cfc565b9550505b610d34565b602089607f841681518110610cdb57610cda611adb565b5b60200260200101515114610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90612429565b60405180910390fd5b602085610d319190611cfc565b94505b602084019350806001019050610bac565b50600484610d539190611cfc565b67ffffffffffffffff811115610d6c57610d6b611210565b5b6040519080825280601f01601f191660200182016040528015610d9e5781602001600182028036833780820191505090505b5094508660208601526000935060005b6020811015610ef957868160208110610dca57610dc9611adb565b5b1a60f81b60f81c60ff16915060ff820315610ef95760006080831614610eb85760fe8203610e41578385602488010152610e2183602088600488610e0e9190611cfc565b60208851610e1c9190611f28565b611159565b60208351610e2f9190611f28565b84610e3a9190611cfc565b9350610eb3565b600089607f841681518110610e5957610e58611adb565b5b60200260200101515190508486602489010152610ea38a607f851681518110610e8557610e84611adb565b5b6020026020010151600089600489610e9d9190611cfc565b85611159565b8085610eaf9190611cfc565b9450505b610ee8565b600089607f841681518110610ed057610ecf611adb565b5b60200260200101519050602081015186602489010152505b602085019450806001019050610dae565b50505050509392505050565b60008260f81c60ff16905060ff8103610f1e5750610fb5565b600060208351610f2e9190611cfc565b67ffffffffffffffff811115610f4757610f46611210565b5b6040519080825280601f01601f191660200182016040528015610f795781602001600182028036833780820191505090505b50858381518110610f8d57610f8c611adb565b5b602002602001018190529050610fa98360008360208751611159565b82518060208301525050505b505050565b606060008360f81c60ff16905060ff8103610fd85784915050611152565b600060808216146110745760fe81036110065782806020019051810190610fff919061256e565b945061106f565b60006020840151905060208114611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990612629565b60405180910390fd5b60208451036020850152602084016020607f841602602088010152505b61114d565b6020835110156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090612695565b60405180910390fd5b60208351111561112a576000602067ffffffffffffffff8111156110e0576110df611210565b5b6040519080825280601f01601f1916602001820160405280156111125781602001600182028036833780820191505090505b5090506111258460008360008851611159565b809350505b8285607f83168151811061114157611140611adb565b5b60200260200101819052505b849150505b9392505050565b808260208501018286602089010160045afa505050505050565b6040518060200160405280606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126111bf576111be61119a565b5b8235905067ffffffffffffffff8111156111dc576111db61119f565b5b6020830191508360208202830111156111f8576111f76111a4565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611248826111ff565b810181811067ffffffffffffffff8211171561126757611266611210565b5b80604052505050565b600061127a611186565b9050611286828261123f565b919050565b600067ffffffffffffffff8211156112a6576112a5611210565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff8211156112d7576112d6611210565b5b6112e0826111ff565b9050602081019050919050565b82818337600083830152505050565b600061130f61130a846112bc565b611270565b90508281526020810184848401111561132b5761132a6112b7565b5b6113368482856112ed565b509392505050565b600082601f8301126113535761135261119a565b5b81356113638482602086016112fc565b91505092915050565b600061137f61137a8461128b565b611270565b905080838252602082019050602084028301858111156113a2576113a16111a4565b5b835b818110156113e957803567ffffffffffffffff8111156113c7576113c661119a565b5b8086016113d4898261133e565b855260208501945050506020810190506113a4565b5050509392505050565b600082601f8301126114085761140761119a565b5b813561141884826020860161136c565b91505092915050565b600067ffffffffffffffff82111561143c5761143b611210565b5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114788261144d565b9050919050565b600061148a8261146d565b9050919050565b61149a8161147f565b81146114a557600080fd5b50565b6000813590506114b781611491565b92915050565b60006114d06114cb84611421565b611270565b905080838252602082019050602084028301858111156114f3576114f26111a4565b5b835b8181101561151c578061150888826114a8565b8452602084019350506020810190506114f5565b5050509392505050565b600082601f83011261153b5761153a61119a565b5b813561154b8482602086016114bd565b91505092915050565b6000806000806060858703121561156e5761156d611190565b5b600085013567ffffffffffffffff81111561158c5761158b611195565b5b611598878288016111a9565b9450945050602085013567ffffffffffffffff8111156115bb576115ba611195565b5b6115c7878288016113f3565b925050604085013567ffffffffffffffff8111156115e8576115e7611195565b5b6115f487828801611526565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61163f8161162c565b82525050565b60006116518383611636565b60208301905092915050565b6000602082019050919050565b600061167582611600565b61167f818561160b565b935061168a8361161c565b8060005b838110156116bb5781516116a28882611645565b97506116ad8361165d565b92505060018101905061168e565b5085935050505092915050565b600060208301600083015184820360008601526116e5828261166a565b9150508091505092915050565b6000602082019050818103600083015261170c81846116c8565b905092915050565b61171d8161162c565b811461172857600080fd5b50565b60008135905061173a81611714565b92915050565b6000806040838503121561175757611756611190565b5b60006117658582860161172b565b92505060206117768582860161172b565b9150509250929050565b60008115159050919050565b61179581611780565b82525050565b60006020820190506117b0600083018461178c565b92915050565b6000819050919050565b6117c9816117b6565b82525050565b60006020820190506117e460008301846117c0565b92915050565b6117f38161162c565b82525050565b600060208201905061180e60008301846117ea565b92915050565b600061181f8261146d565b9050919050565b61182f81611814565b811461183a57600080fd5b50565b60008135905061184c81611826565b92915050565b600061185d8261146d565b9050919050565b61186d81611852565b811461187857600080fd5b50565b60008135905061188a81611864565b92915050565b6118998161146d565b81146118a457600080fd5b50565b6000813590506118b681611890565b92915050565b6000806000606084860312156118d5576118d4611190565b5b60006118e38682870161183d565b93505060206118f48682870161187b565b9250506040611905868287016118a7565b9150509250925092565b60008083601f8401126119255761192461119a565b5b8235905067ffffffffffffffff8111156119425761194161119f565b5b60208301915083600182028301111561195e5761195d6111a4565b5b9250929050565b6000806000806060858703121561197f5761197e611190565b5b600061198d878288016118a7565b945050602061199e8782880161172b565b935050604085013567ffffffffffffffff8111156119bf576119be611195565b5b6119cb8782880161190f565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a135780820151818401526020810190506119f8565b60008484015250505050565b6000611a2a826119d9565b611a3481856119e4565b9350611a448185602086016119f5565b611a4d816111ff565b840191505092915050565b6000604082019050611a6d600083018561178c565b8181036020830152611a7f8184611a1f565b90509392505050565b600080600060608486031215611aa157611aa0611190565b5b6000611aaf8682870161172b565b9350506020611ac08682870161172b565b9250506040611ad18682870161172b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b611b138161146d565b82525050565b6000602082019050611b2e6000830184611b0a565b92915050565b600081519050611b4381611714565b92915050565b600060208284031215611b5f57611b5e611190565b5b6000611b6d84828501611b34565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bb08261162c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611be257611be1611b76565b5b600182019050919050565b600082825260208201905092915050565b7f50726576656e7454616d706572696e673a20436f646520686173206368616e6760008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c5a602283611bed565b9150611c6582611bfe565b604082019050919050565b60006020820190508181036000830152611c8981611c4d565b9050919050565b7f214153534552545f475400000000000000000000000000000000000000000000600082015250565b6000611cc6600a83611bed565b9150611cd182611c90565b602082019050919050565b60006020820190508181036000830152611cf581611cb9565b9050919050565b6000611d078261162c565b9150611d128361162c565b9250828201905080821115611d2a57611d29611b76565b5b92915050565b6000819050919050565b6000611d55611d50611d4b8461144d565b611d30565b61144d565b9050919050565b6000611d6782611d3a565b9050919050565b6000611d7982611d5c565b9050919050565b611d8981611d6e565b82525050565b6000604082019050611da46000830185611d80565b611db16020830184611b0a565b9392505050565b6000604082019050611dcd6000830185611b0a565b611dda60208301846117ea565b9392505050565b7f5a61707065724578656375746f723a204f6e6c792063616c6c61626c6520627960008201527f205a617070657200000000000000000000000000000000000000000000000000602082015250565b6000611e3d602783611bed565b9150611e4882611de1565b604082019050919050565b60006020820190508181036000830152611e6c81611e30565b9050919050565b600081905092915050565b6000611e8a8385611e73565b9350611e978385846112ed565b82840190509392505050565b6000611eb0828486611e7e565b91508190509392505050565b7f214153534552545f455100000000000000000000000000000000000000000000600082015250565b6000611ef2600a83611bed565b9150611efd82611ebc565b602082019050919050565b60006020820190508181036000830152611f2181611ee5565b9050919050565b6000611f338261162c565b9150611f3e8361162c565b9250828203905081811115611f5657611f55611b76565b5b92915050565b6000611f678261162c565b9150611f728361162c565b9250828202611f808161162c565b91508282048414831517611f9757611f96611b76565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fd88261162c565b9150611fe38361162c565b925082611ff357611ff2611f9e565b5b828204905092915050565b6000612009826119d9565b6120138185611e73565b93506120238185602086016119f5565b80840191505092915050565b600061203b8284611ffe565b915081905092915050565b7f5f657865637574653a2076616c75652063616c6c20686173206e6f2076616c7560008201527f6520696e646963617465642e0000000000000000000000000000000000000000602082015250565b60006120a2602c83611bed565b91506120ad82612046565b604082019050919050565b600060208201905081810360008301526120d181612095565b9050919050565b7f496e76616c69642063616c6c7479706500000000000000000000000000000000600082015250565b600061210e601083611bed565b9150612119826120d8565b602082019050919050565b6000602082019050818103600083015261213d81612101565b9050919050565b600081519050919050565b600061215a82612144565b6121648185611bed565b93506121748185602086016119f5565b61217d816111ff565b840191505092915050565b600060608201905061219d60008301866117ea565b6121aa6020830185611b0a565b81810360408301526121bc818461214f565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061220e826119d9565b61221881856121f2565b93506122288185602086016119f5565b612231816111ff565b840191505092915050565b60006122488383612203565b905092915050565b6000602082019050919050565b6000612268826121c6565b61227281856121d1565b935083602082028501612284856121e2565b8060005b858110156122c057848403895281516122a1858261223c565b94506122ac83612250565b925060208a01995050600181019050612288565b50829750879550505050505092915050565b600060208201905081810360008301526122ec818461225d565b905092915050565b60006122ff8261162c565b915061230a8361162c565b92508261231a57612319611f9e565b5b828206905092915050565b7f44796e616d6963207374617465207661726961626c6573206d7573742062652060008201527f61206d756c7469706c65206f6620333220627974657300000000000000000000602082015250565b6000612381603683611bed565b915061238c82612325565b604082019050919050565b600060208201905081810360008301526123b081612374565b9050919050565b7f537461746963207374617465207661726961626c6573206d757374206265203360008201527f3220627974657300000000000000000000000000000000000000000000000000602082015250565b6000612413602783611bed565b915061241e826123b7565b604082019050919050565b6000602082019050818103600083015261244281612406565b9050919050565b600061245c612457846112bc565b611270565b905082815260208101848484011115612478576124776112b7565b5b6124838482856119f5565b509392505050565b600082601f8301126124a05761249f61119a565b5b81516124b0848260208601612449565b91505092915050565b60006124cc6124c78461128b565b611270565b905080838252602082019050602084028301858111156124ef576124ee6111a4565b5b835b8181101561253657805167ffffffffffffffff8111156125145761251361119a565b5b808601612521898261248b565b855260208501945050506020810190506124f1565b5050509392505050565b600082601f8301126125555761255461119a565b5b81516125658482602086016124b9565b91505092915050565b60006020828403121561258457612583611190565b5b600082015167ffffffffffffffff8111156125a2576125a1611195565b5b6125ae84828501612540565b91505092915050565b7f4f6e6c79206f6e652072657475726e2076616c7565207065726d69747465642060008201527f287661726961626c652900000000000000000000000000000000000000000000602082015250565b6000612613602a83611bed565b915061261e826125b7565b604082019050919050565b6000602082019050818103600083015261264281612606565b9050919050565b7f52657475726e206174206c656173742033322062797465730000000000000000600082015250565b600061267f601883611bed565b915061268a82612649565b602082019050919050565b600060208201905081810360008301526126ae81612672565b905091905056fea2646970667358221220fe97576d4c8a3bf4e4def1dc07fc2f9d7518881e997927202a7ea047526213f264736f6c63430008110033";

type ZapperExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapperExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapperExecutor__factory extends ContractFactory {
  constructor(...args: ZapperExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZapperExecutor> {
    return super.deploy(overrides || {}) as Promise<ZapperExecutor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZapperExecutor {
    return super.attach(address) as ZapperExecutor;
  }
  override connect(signer: Signer): ZapperExecutor__factory {
    return super.connect(signer) as ZapperExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapperExecutorInterface {
    return new utils.Interface(_abi) as ZapperExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapperExecutor {
    return new Contract(address, _abi, signerOrProvider) as ZapperExecutor;
  }
}
