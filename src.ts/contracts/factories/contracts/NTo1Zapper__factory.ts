/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NTo1Zapper,
  NTo1ZapperInterface,
} from "../../contracts/NTo1Zapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWrappedNative",
        name: "wrappedNative_",
        type: "address",
      },
      {
        internalType: "contract ZapperExecutor",
        name: "executor_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct TokenQuantity[]",
            name: "inputs",
            type: "tuple[]",
          },
          {
            internalType: "bytes32[]",
            name: "commands",
            type: "bytes32[]",
          },
          {
            internalType: "bytes[]",
            name: "state",
            type: "bytes[]",
          },
          {
            internalType: "contract IERC20[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct MultiZapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "zap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "dust",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasUsed",
            type: "uint256",
          },
        ],
        internalType: "struct ZapperOutput",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ce938038062001ce9833981810160405281019062000037919062000186565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001cd565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e182620000b4565b9050919050565b6000620000f582620000d4565b9050919050565b6200010781620000e8565b81146200011357600080fd5b50565b6000815190506200012781620000fc565b92915050565b60006200013a82620000b4565b9050919050565b60006200014e826200012d565b9050919050565b620001608162000141565b81146200016c57600080fd5b50565b600081519050620001808162000155565b92915050565b60008060408385031215620001a0576200019f620000af565b5b6000620001b08582860162000116565b9250506020620001c3858286016200016f565b9150509250929050565b60805160a051611ae1620002086000396000818161024a015281816104ae01526105c201526000818161051d01526105a10152611ae16000f3fe6080604052600436106100225760003560e01c806390948cb61461002e57610029565b3661002957005b600080fd5b610048600480360381019061004391906109ff565b61005e565b6040516100559190610b60565b60405180910390f35b6100666109a6565b61006e6100bb565b60005a90506100ab836100a58560a001602081019061008d9190610be0565b8660c00160208101906100a09190610be0565b61010a565b836101e1565b9150506100b661041c565b919050565b600260005403610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f790610c6a565b60405180910390fd5b6002600081905550565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146101c0578273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101789190610c99565b602060405180830381865afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b99190610ce0565b90506101db565b8173ffffffffffffffffffffffffffffffffffffffff163190505b92915050565b6101e96109a6565b6000846080013503610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610d59565b60405180910390fd5b6102488480600001906102439190610d88565b610426565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166308c4b4988580602001906102949190610deb565b8780604001906102a49190610e4e565b8980606001906102b49190610eb1565b6040518763ffffffff1660e01b81526004016102d596959493929190611264565b6000604051808303816000875af11580156102f4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061031d9190611460565b60000151816000018190525060006103598560a00160208101906103419190610be0565b8660c00160208101906103549190610be0565b61010a565b905083811161039d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610394906114f5565b60405180910390fd5b600084826103ab9190611544565b905085608001358110156103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb906115c4565b60405180910390fd5b808360200181815250505a8461040a9190611544565b83604001818152505050509392505050565b6001600081905550565b60005b828290508110156105fe576000838383818110610449576104486115e4565b5b90506040020180360381019061045f9190611678565b9050600081600001519050600082602001519050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104d8576104d382337f000000000000000000000000000000000000000000000000000000000000000084610603565b6105e8565b8034101561051b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610512906116f1565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561058357600080fd5b505af1158015610597573d6000803e3d6000fd5b50505050506105e77f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008361068c565b5b50505080806105f690611711565b915050610429565b505050565b610686846323b872dd60e01b85858560405160240161062493929190611768565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610712565b50505050565b61070d8363a9059cbb60e01b84846040516024016106ab92919061179f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610712565b505050565b6000610774826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107d99092919063ffffffff16565b90506000815111156107d457808060200190518101906107949190611800565b6107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca9061189f565b60405180910390fd5b5b505050565b60606107e884846000856107f1565b90509392505050565b606082471015610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611931565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161085f91906119c2565b60006040518083038185875af1925050503d806000811461089c576040519150601f19603f3d011682016040523d82523d6000602084013e6108a1565b606091505b50915091506108b2878383876108be565b92505050949350505050565b60608315610920576000835103610918576108d885610933565b610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611a25565b60405180910390fd5b5b82905061092b565b61092a8383610956565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156109695781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d9190611a89565b60405180910390fd5b60405180606001604052806060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060e082840312156109f6576109f56109db565b5b81905092915050565b600060208284031215610a1557610a146109d1565b5b600082013567ffffffffffffffff811115610a3357610a326109d6565b5b610a3f848285016109e0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610a8781610a74565b82525050565b6000610a998383610a7e565b60208301905092915050565b6000602082019050919050565b6000610abd82610a48565b610ac78185610a53565b9350610ad283610a64565b8060005b83811015610b03578151610aea8882610a8d565b9750610af583610aa5565b925050600181019050610ad6565b5085935050505092915050565b60006060830160008301518482036000860152610b2d8282610ab2565b9150506020830151610b426020860182610a7e565b506040830151610b556040860182610a7e565b508091505092915050565b60006020820190508181036000830152610b7a8184610b10565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bad82610b82565b9050919050565b610bbd81610ba2565b8114610bc857600080fd5b50565b600081359050610bda81610bb4565b92915050565b600060208284031215610bf657610bf56109d1565b5b6000610c0484828501610bcb565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610c54601f83610c0d565b9150610c5f82610c1e565b602082019050919050565b60006020820190508181036000830152610c8381610c47565b9050919050565b610c9381610ba2565b82525050565b6000602082019050610cae6000830184610c8a565b92915050565b610cbd81610a74565b8114610cc857600080fd5b50565b600081519050610cda81610cb4565b92915050565b600060208284031215610cf657610cf56109d1565b5b6000610d0484828501610ccb565b91505092915050565b7f494e56414c49445f4f55545055545f414d4f554e540000000000000000000000600082015250565b6000610d43601583610c0d565b9150610d4e82610d0d565b602082019050919050565b60006020820190508181036000830152610d7281610d36565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610da557610da4610d79565b5b80840192508235915067ffffffffffffffff821115610dc757610dc6610d7e565b5b602083019250604082023603831315610de357610de2610d83565b5b509250929050565b60008083356001602003843603038112610e0857610e07610d79565b5b80840192508235915067ffffffffffffffff821115610e2a57610e29610d7e565b5b602083019250602082023603831315610e4657610e45610d83565b5b509250929050565b60008083356001602003843603038112610e6b57610e6a610d79565b5b80840192508235915067ffffffffffffffff821115610e8d57610e8c610d7e565b5b602083019250602082023603831315610ea957610ea8610d83565b5b509250929050565b60008083356001602003843603038112610ece57610ecd610d79565b5b80840192508235915067ffffffffffffffff821115610ef057610eef610d7e565b5b602083019250602082023603831315610f0c57610f0b610d83565b5b509250929050565b600082825260208201905092915050565b600080fd5b82818337505050565b6000610f3f8385610f14565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610f7257610f71610f25565b5b602083029250610f83838584610f2a565b82840190509392505050565b600082825260208201905092915050565b6000819050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610fe78385610faa565b9350610ff4838584610fbb565b610ffd83610fca565b840190509392505050565b6000611015848484610fdb565b90509392505050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261104a57611049611028565b5b83810192508235915060208301925067ffffffffffffffff8211156110725761107161101e565b5b60018202360383131561108857611087611023565b5b509250929050565b6000602082019050919050565b60006110a98385610f8f565b9350836020840285016110bb84610fa0565b8060005b878110156111015784840389526110d6828461102d565b6110e1868284611008565b95506110ec84611090565b935060208b019a5050506001810190506110bf565b50829750879450505050509392505050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b600061115361114e61114984610b82565b61112e565b610b82565b9050919050565b600061116582611138565b9050919050565b60006111778261115a565b9050919050565b6111878161116c565b82525050565b6000611199838361117e565b60208301905092915050565b60006111b082610ba2565b9050919050565b6111c0816111a5565b81146111cb57600080fd5b50565b6000813590506111dd816111b7565b92915050565b60006111f260208401846111ce565b905092915050565b6000602082019050919050565b60006112138385611113565b935061121e82611124565b8060005b858110156112575761123482846111e3565b61123e888261118d565b9750611249836111fa565b925050600181019050611222565b5085925050509392505050565b6000606082019050818103600083015261127f81888a610f33565b9050818103602083015261129481868861109d565b905081810360408301526112a9818486611207565b9050979650505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112f382610fca565b810181811067ffffffffffffffff82111715611312576113116112bb565b5b80604052505050565b60006113256109c7565b905061133182826112ea565b919050565b600080fd5b600080fd5b600067ffffffffffffffff82111561135b5761135a6112bb565b5b602082029050602081019050919050565b600080fd5b600061138461137f84611340565b61131b565b905080838252602082019050602084028301858111156113a7576113a661136c565b5b835b818110156113d057806113bc8882610ccb565b8452602084019350506020810190506113a9565b5050509392505050565b600082601f8301126113ef576113ee61133b565b5b81516113ff848260208601611371565b91505092915050565b60006020828403121561141e5761141d6112b6565b5b611428602061131b565b9050600082015167ffffffffffffffff81111561144857611447611336565b5b611454848285016113da565b60008301525092915050565b600060208284031215611476576114756109d1565b5b600082015167ffffffffffffffff811115611494576114936109d6565b5b6114a084828501611408565b91505092915050565b7f494e56414c49445f4e45575f42414c414e434500000000000000000000000000600082015250565b60006114df601383610c0d565b91506114ea826114a9565b602082019050919050565b6000602082019050818103600083015261150e816114d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061154f82610a74565b915061155a83610a74565b925082820390508181111561157257611571611515565b5b92915050565b7f494e53554646494349454e545f4f555400000000000000000000000000000000600082015250565b60006115ae601083610c0d565b91506115b982611578565b602082019050919050565b600060208201905081810360008301526115dd816115a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008135905061162281610cb4565b92915050565b60006040828403121561163e5761163d6112b6565b5b611648604061131b565b9050600061165884828501610bcb565b600083015250602061166c84828501611613565b60208301525092915050565b60006040828403121561168e5761168d6109d1565b5b600061169c84828501611628565b91505092915050565b7f494e53554646494349454e545f45544800000000000000000000000000000000600082015250565b60006116db601083610c0d565b91506116e6826116a5565b602082019050919050565b6000602082019050818103600083015261170a816116ce565b9050919050565b600061171c82610a74565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361174e5761174d611515565b5b600182019050919050565b61176281610a74565b82525050565b600060608201905061177d6000830186610c8a565b61178a6020830185610c8a565b6117976040830184611759565b949350505050565b60006040820190506117b46000830185610c8a565b6117c16020830184611759565b9392505050565b60008115159050919050565b6117dd816117c8565b81146117e857600080fd5b50565b6000815190506117fa816117d4565b92915050565b600060208284031215611816576118156109d1565b5b6000611824848285016117eb565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611889602a83610c0d565b91506118948261182d565b604082019050919050565b600060208201905081810360008301526118b88161187c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061191b602683610c0d565b9150611926826118bf565b604082019050919050565b6000602082019050818103600083015261194a8161190e565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561198557808201518184015260208101905061196a565b60008484015250505050565b600061199c82611951565b6119a6818561195c565b93506119b6818560208601611967565b80840191505092915050565b60006119ce8284611991565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611a0f601d83610c0d565b9150611a1a826119d9565b602082019050919050565b60006020820190508181036000830152611a3e81611a02565b9050919050565b600081519050919050565b6000611a5b82611a45565b611a658185610c0d565b9350611a75818560208601611967565b611a7e81610fca565b840191505092915050565b60006020820190508181036000830152611aa38184611a50565b90509291505056fea2646970667358221220b9befa134c3ab8de7a93b475668f26ea39621ff4b16653b88c1aa3081d29d24b64736f6c63430008110033";

type NTo1ZapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NTo1ZapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NTo1Zapper__factory extends ContractFactory {
  constructor(...args: NTo1ZapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    wrappedNative_: PromiseOrValue<string>,
    executor_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NTo1Zapper> {
    return super.deploy(
      wrappedNative_,
      executor_,
      overrides || {}
    ) as Promise<NTo1Zapper>;
  }
  override getDeployTransaction(
    wrappedNative_: PromiseOrValue<string>,
    executor_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      wrappedNative_,
      executor_,
      overrides || {}
    );
  }
  override attach(address: string): NTo1Zapper {
    return super.attach(address) as NTo1Zapper;
  }
  override connect(signer: Signer): NTo1Zapper__factory {
    return super.connect(signer) as NTo1Zapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NTo1ZapperInterface {
    return new utils.Interface(_abi) as NTo1ZapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NTo1Zapper {
    return new Contract(address, _abi, signerOrProvider) as NTo1Zapper;
  }
}
