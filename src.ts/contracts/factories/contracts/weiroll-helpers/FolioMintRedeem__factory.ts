/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FolioMintRedeem,
  FolioMintRedeemInterface,
} from "../../../contracts/weiroll-helpers/FolioMintRedeem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFolio",
        name: "folio",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFolio",
        name: "folio",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d92806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631e9a69501461003b5780636a62784214610057575b600080fd5b610055600480360381019061005091906105dc565b610087565b005b610071600480360381019061006c919061061c565b6101d1565b60405161007e9190610658565b60405180910390f35b6000808373ffffffffffffffffffffffffffffffffffffffff1663647bec256040518163ffffffff1660e01b8152600401600060405180830381865afa1580156100d5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906100fe91906108d0565b9150915060005b825181101561014257600082828151811061012357610122610948565b5b602002602001018181525050808061013a906109a6565b915050610105565b508373ffffffffffffffffffffffffffffffffffffffff1663b0384a0b843085856040518563ffffffff1660e01b81526004016101829493929190610b79565b6000604051808303816000875af11580156101a1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101ca9190610bcc565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663647bec256040518163ffffffff1660e01b8152600401600060405180830381865afa158015610221573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061024a91906108d0565b91509150600061025a83836103f5565b905060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102979190610c15565b602060405180830381865afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610c30565b90508573ffffffffffffffffffffffffffffffffffffffff166394bf804d83306040518363ffffffff1660e01b8152600401610315929190610c5d565b6000604051808303816000875af1158015610334573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061035d91906108d0565b505060008673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039a9190610c15565b602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610c30565b905081816103e99190610c86565b95505050505050919050565b6000806000905060005b84518110156104fe57600085828151811061041d5761041c610948565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161045d9190610c15565b602060405180830381865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190610c30565b905060008583815181106104b5576104b4610948565b5b602002602001015190506104e784670de0b6b3a764000083856104d89190610ce9565b6104e29190610d1a565b610509565b9350505080806104f6906109a6565b9150506103ff565b508091505092915050565b6000818311610518578161051a565b825b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056182610536565b9050919050565b600061057382610556565b9050919050565b61058381610568565b811461058e57600080fd5b50565b6000813590506105a08161057a565b92915050565b6000819050919050565b6105b9816105a6565b81146105c457600080fd5b50565b6000813590506105d6816105b0565b92915050565b600080604083850312156105f3576105f261052c565b5b600061060185828601610591565b9250506020610612858286016105c7565b9150509250929050565b6000602082840312156106325761063161052c565b5b600061064084828501610591565b91505092915050565b610652816105a6565b82525050565b600060208201905061066d6000830184610649565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106c182610678565b810181811067ffffffffffffffff821117156106e0576106df610689565b5b80604052505050565b60006106f3610522565b90506106ff82826106b8565b919050565b600067ffffffffffffffff82111561071f5761071e610689565b5b602082029050602081019050919050565b600080fd5b61073e81610556565b811461074957600080fd5b50565b60008151905061075b81610735565b92915050565b600061077461076f84610704565b6106e9565b9050808382526020820190506020840283018581111561079757610796610730565b5b835b818110156107c057806107ac888261074c565b845260208401935050602081019050610799565b5050509392505050565b600082601f8301126107df576107de610673565b5b81516107ef848260208601610761565b91505092915050565b600067ffffffffffffffff82111561081357610812610689565b5b602082029050602081019050919050565b600081519050610833816105b0565b92915050565b600061084c610847846107f8565b6106e9565b9050808382526020820190506020840283018581111561086f5761086e610730565b5b835b8181101561089857806108848882610824565b845260208401935050602081019050610871565b5050509392505050565b600082601f8301126108b7576108b6610673565b5b81516108c7848260208601610839565b91505092915050565b600080604083850312156108e7576108e661052c565b5b600083015167ffffffffffffffff81111561090557610904610531565b5b610911858286016107ca565b925050602083015167ffffffffffffffff81111561093257610931610531565b5b61093e858286016108a2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b1826105a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109e3576109e2610977565b5b600182019050919050565b6109f781610556565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a3281610556565b82525050565b6000610a448383610a29565b60208301905092915050565b6000602082019050919050565b6000610a68826109fd565b610a728185610a08565b9350610a7d83610a19565b8060005b83811015610aae578151610a958882610a38565b9750610aa083610a50565b925050600181019050610a81565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610af0816105a6565b82525050565b6000610b028383610ae7565b60208301905092915050565b6000602082019050919050565b6000610b2682610abb565b610b308185610ac6565b9350610b3b83610ad7565b8060005b83811015610b6c578151610b538882610af6565b9750610b5e83610b0e565b925050600181019050610b3f565b5085935050505092915050565b6000608082019050610b8e6000830187610649565b610b9b60208301866109ee565b8181036040830152610bad8185610a5d565b90508181036060830152610bc18184610b1b565b905095945050505050565b600060208284031215610be257610be161052c565b5b600082015167ffffffffffffffff811115610c0057610bff610531565b5b610c0c848285016108a2565b91505092915050565b6000602082019050610c2a60008301846109ee565b92915050565b600060208284031215610c4657610c4561052c565b5b6000610c5484828501610824565b91505092915050565b6000604082019050610c726000830185610649565b610c7f60208301846109ee565b9392505050565b6000610c91826105a6565b9150610c9c836105a6565b9250828203905081811115610cb457610cb3610977565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cf4826105a6565b9150610cff836105a6565b925082610d0f57610d0e610cba565b5b828204905092915050565b6000610d25826105a6565b9150610d30836105a6565b9250828202610d3e816105a6565b91508282048414831517610d5557610d54610977565b5b509291505056fea26469706673582212200dda889ea9bf435be8acfd10b8fad71f213ae212651e6b40e6ac52c8b45d4c4964736f6c63430008110033";

type FolioMintRedeemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FolioMintRedeemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FolioMintRedeem__factory extends ContractFactory {
  constructor(...args: FolioMintRedeemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FolioMintRedeem> {
    return super.deploy(overrides || {}) as Promise<FolioMintRedeem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FolioMintRedeem {
    return super.attach(address) as FolioMintRedeem;
  }
  override connect(signer: Signer): FolioMintRedeem__factory {
    return super.connect(signer) as FolioMintRedeem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FolioMintRedeemInterface {
    return new utils.Interface(_abi) as FolioMintRedeemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FolioMintRedeem {
    return new Contract(address, _abi, signerOrProvider) as FolioMintRedeem;
  }
}
