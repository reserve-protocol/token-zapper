/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ZapperExecutor,
  ZapperExecutorInterface,
} from "../../../contracts/Zapper.sol/ZapperExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "drainERC20s",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Call[]",
        name: "calls",
        type: "tuple[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "execute",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "dust",
            type: "uint256[]",
          },
        ],
        internalType: "struct ExecuteOutput",
        name: "out",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FacadeRead",
        name: "facade",
        type: "address",
      },
      {
        internalType: "contract RToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "amts",
        type: "uint256[]",
      },
    ],
    name: "issueRToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FacadeRead",
        name: "facade",
        type: "address",
      },
      {
        internalType: "contract RToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintMaxRToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "spenders",
        type: "address[]",
      },
    ],
    name: "setupApprovals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a98806100206000396000f3fe60806040526004361061004e5760003560e01c806302f8a3f51461005a578063266ed2b61461008357806394919ce8146100c0578063f1fa5150146100e9578063f7cfaec01461011257610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610e4c565b61013b565b005b34801561008f57600080fd5b506100aa60048036038101906100a59190610f80565b610232565b6040516100b791906110f3565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e29190611115565b610511565b005b3480156100f557600080fd5b50610110600480360381019061010b91906111be565b610606565b005b34801561011e57600080fd5b506101396004803603810190610134919061123f565b610793565b005b60008573ffffffffffffffffffffffffffffffffffffffff16631c3debf486306040518363ffffffff1660e01b815260040161017892919061130d565b6020604051808303816000875af1158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb9190611362565b90508473ffffffffffffffffffffffffffffffffffffffff16631207f0c185836040518363ffffffff1660e01b81526004016101f892919061139e565b600060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b50505050505050505050565b61023a610cf0565b600085859050905060005b818110156103cd576000878783818110610262576102616113c7565b5b90506020028101906102749190611405565b6000016020810190610286919061142d565b90506000808273ffffffffffffffffffffffffffffffffffffffff168a8a868181106102b5576102b46113c7565b5b90506020028101906102c79190611405565b604001358b8b878181106102de576102dd6113c7565b5b90506020028101906102f09190611405565b80602001906102ff919061145a565b6040516020016103109291906114fc565b60405160208183030381529060405260405161032c919061157b565b60006040518083038185875af1925050503d8060008114610369576040519150601f19603f3d011682016040523d82523d6000602084013e61036e565b606091505b50915091508181906103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad91906115f8565b60405180910390fd5b5050505080806103c590611649565b915050610245565b508383905067ffffffffffffffff8111156103eb576103ea611691565b5b6040519080825280602002602001820160405280156104195781602001602082028036833780820191505090505b50826000018190525060005b8484905081101561050757848482818110610443576104426113c7565b5b905060200201602081019061045891906116fe565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610490919061172b565b602060405180830381865afa1580156104ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d19190611362565b836000015182815181106104e8576104e76113c7565b5b60200260200101818152505080806104ff90611649565b915050610425565b5050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff16631c3debf484306040518363ffffffff1660e01b815260040161054e92919061130d565b6020604051808303816000875af115801561056d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105919190611362565b90508273ffffffffffffffffffffffffffffffffffffffff16631207f0c183836040518363ffffffff1660e01b81526004016105ce92919061139e565b600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b5050505050505050565b81819050848490501461064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590611792565b60405180910390fd5b600084849050905060005b8181101561078b576000868683818110610676576106756113c7565b5b905060200201602081019061068b91906116fe565b905060008585848181106106a2576106a16113c7565b5b90506020020160208101906106b7919061142d565b905060008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30846040518363ffffffff1660e01b81526004016106f69291906117b2565b602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107379190611362565b90506000811461074957505050610778565b61077483837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610887565b5050505b808061078390611649565b915050610659565b505050505050565b600083839050905060005b818110156108805760008585838181106107bb576107ba6113c7565b5b90506020020160208101906107d091906116fe565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161080d919061172b565b602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190611362565b90506000810361085f57505061086d565b61086a8286836109d6565b50505b808061087890611649565b91505061079e565b5050505050565b6000811480610911575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016108ce9291906117b2565b602060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190611362565b145b610950576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109479061184d565b60405180910390fd5b6109d18363095ea7b360e01b848460405160240161096f92919061139e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a5c565b505050565b610a578363a9059cbb60e01b84846040516024016109f592919061139e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a5c565b505050565b6000610abe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b239092919063ffffffff16565b9050600081511115610b1e5780806020019051810190610ade91906118a5565b610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490611944565b60405180910390fd5b5b505050565b6060610b328484600085610b3b565b90509392505050565b606082471015610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b77906119d6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ba9919061157b565b60006040518083038185875af1925050503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b5091509150610bfc87838387610c08565b92505050949350505050565b60608315610c6a576000835103610c6257610c2285610c7d565b610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611a42565b60405180910390fd5b5b829050610c75565b610c748383610ca0565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610cb35781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce791906115f8565b60405180910390fd5b6040518060200160405280606081525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3882610d0d565b9050919050565b6000610d4a82610d2d565b9050919050565b610d5a81610d3f565b8114610d6557600080fd5b50565b600081359050610d7781610d51565b92915050565b6000610d8882610d2d565b9050919050565b610d9881610d7d565b8114610da357600080fd5b50565b600081359050610db581610d8f565b92915050565b610dc481610d2d565b8114610dcf57600080fd5b50565b600081359050610de181610dbb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e0c57610e0b610de7565b5b8235905067ffffffffffffffff811115610e2957610e28610dec565b5b602083019150836020820283011115610e4557610e44610df1565b5b9250929050565b600080600080600060808688031215610e6857610e67610d03565b5b6000610e7688828901610d68565b9550506020610e8788828901610da6565b9450506040610e9888828901610dd2565b935050606086013567ffffffffffffffff811115610eb957610eb8610d08565b5b610ec588828901610df6565b92509250509295509295909350565b60008083601f840112610eea57610ee9610de7565b5b8235905067ffffffffffffffff811115610f0757610f06610dec565b5b602083019150836020820283011115610f2357610f22610df1565b5b9250929050565b60008083601f840112610f4057610f3f610de7565b5b8235905067ffffffffffffffff811115610f5d57610f5c610dec565b5b602083019150836020820283011115610f7957610f78610df1565b5b9250929050565b60008060008060408587031215610f9a57610f99610d03565b5b600085013567ffffffffffffffff811115610fb857610fb7610d08565b5b610fc487828801610ed4565b9450945050602085013567ffffffffffffffff811115610fe757610fe6610d08565b5b610ff387828801610f2a565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6110408161102d565b82525050565b60006110528383611037565b60208301905092915050565b6000602082019050919050565b600061107682611001565b611080818561100c565b935061108b8361101d565b8060005b838110156110bc5781516110a38882611046565b97506110ae8361105e565b92505060018101905061108f565b5085935050505092915050565b600060208301600083015184820360008601526110e6828261106b565b9150508091505092915050565b6000602082019050818103600083015261110d81846110c9565b905092915050565b60008060006060848603121561112e5761112d610d03565b5b600061113c86828701610d68565b935050602061114d86828701610da6565b925050604061115e86828701610dd2565b9150509250925092565b60008083601f84011261117e5761117d610de7565b5b8235905067ffffffffffffffff81111561119b5761119a610dec565b5b6020830191508360208202830111156111b7576111b6610df1565b5b9250929050565b600080600080604085870312156111d8576111d7610d03565b5b600085013567ffffffffffffffff8111156111f6576111f5610d08565b5b61120287828801610f2a565b9450945050602085013567ffffffffffffffff81111561122557611224610d08565b5b61123187828801611168565b925092505092959194509250565b60008060006040848603121561125857611257610d03565b5b600084013567ffffffffffffffff81111561127657611275610d08565b5b61128286828701610f2a565b9350935050602061129586828701610dd2565b9150509250925092565b6000819050919050565b60006112c46112bf6112ba84610d0d565b61129f565b610d0d565b9050919050565b60006112d6826112a9565b9050919050565b60006112e8826112cb565b9050919050565b6112f8816112dd565b82525050565b61130781610d2d565b82525050565b600060408201905061132260008301856112ef565b61132f60208301846112fe565b9392505050565b61133f8161102d565b811461134a57600080fd5b50565b60008151905061135c81611336565b92915050565b60006020828403121561137857611377610d03565b5b60006113868482850161134d565b91505092915050565b6113988161102d565b82525050565b60006040820190506113b360008301856112fe565b6113c0602083018461138f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600082356001606003833603038112611421576114206113f6565b5b80830191505092915050565b60006020828403121561144357611442610d03565b5b600061145184828501610dd2565b91505092915050565b60008083356001602003843603038112611477576114766113f6565b5b80840192508235915067ffffffffffffffff821115611499576114986113fb565b5b6020830192506001820236038313156114b5576114b4611400565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006114e383856114bd565b93506114f08385846114c8565b82840190509392505050565b60006115098284866114d7565b91508190509392505050565b600081519050919050565b60005b8381101561153e578082015181840152602081019050611523565b60008484015250505050565b600061155582611515565b61155f81856114bd565b935061156f818560208601611520565b80840191505092915050565b6000611587828461154a565b915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b60006115ca82611592565b6115d4818561159d565b93506115e4818560208601611520565b6115ed816115ae565b840191505092915050565b6000602082019050818103600083015261161281846115bf565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116548261102d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116865761168561161a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006116cb82610d2d565b9050919050565b6116db816116c0565b81146116e657600080fd5b50565b6000813590506116f8816116d2565b92915050565b60006020828403121561171457611713610d03565b5b6000611722848285016116e9565b91505092915050565b600060208201905061174060008301846112fe565b92915050565b7f496e76616c696420706172616d73000000000000000000000000000000000000600082015250565b600061177c600e8361159d565b915061178782611746565b602082019050919050565b600060208201905081810360008301526117ab8161176f565b9050919050565b60006040820190506117c760008301856112fe565b6117d460208301846112fe565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b600061183760368361159d565b9150611842826117db565b604082019050919050565b600060208201905081810360008301526118668161182a565b9050919050565b60008115159050919050565b6118828161186d565b811461188d57600080fd5b50565b60008151905061189f81611879565b92915050565b6000602082840312156118bb576118ba610d03565b5b60006118c984828501611890565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061192e602a8361159d565b9150611939826118d2565b604082019050919050565b6000602082019050818103600083015261195d81611921565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006119c060268361159d565b91506119cb82611964565b604082019050919050565b600060208201905081810360008301526119ef816119b3565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611a2c601d8361159d565b9150611a37826119f6565b602082019050919050565b60006020820190508181036000830152611a5b81611a1f565b905091905056fea2646970667358221220aeb7d1e13cc21075fb25a4df795d5a49d4bb7b9642d2f477c65549749aae690064736f6c63430008110033";

type ZapperExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapperExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapperExecutor__factory extends ContractFactory {
  constructor(...args: ZapperExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZapperExecutor> {
    return super.deploy(overrides || {}) as Promise<ZapperExecutor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZapperExecutor {
    return super.attach(address) as ZapperExecutor;
  }
  override connect(signer: Signer): ZapperExecutor__factory {
    return super.connect(signer) as ZapperExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapperExecutorInterface {
    return new utils.Interface(_abi) as ZapperExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapperExecutor {
    return new Contract(address, _abi, signerOrProvider) as ZapperExecutor;
  }
}
