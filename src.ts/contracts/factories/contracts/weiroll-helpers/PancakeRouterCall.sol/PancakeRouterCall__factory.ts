/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PancakeRouterCall,
  PancakeRouterCallInterface,
} from "../../../../contracts/weiroll-helpers/PancakeRouterCall.sol/PancakeRouterCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expected",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encodedRouterCall",
        type: "bytes",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610631806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636919e67414610030575b600080fd5b61004a6004803603810190610045919061021d565b610060565b60405161005791906102b4565b60405180910390f35b60008083838101906100729190610491565b9050868160a0018181525050858160c00181815250508473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016100c1919061059d565b6020604051808303816000875af11580156100e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010491906105ce565b91505095945050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61013781610124565b811461014257600080fd5b50565b6000813590506101548161012e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101858261015a565b9050919050565b6101958161017a565b81146101a057600080fd5b50565b6000813590506101b28161018c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126101dd576101dc6101b8565b5b8235905067ffffffffffffffff8111156101fa576101f96101bd565b5b602083019150836001820283011115610216576102156101c2565b5b9250929050565b6000806000806000608086880312156102395761023861011a565b5b600061024788828901610145565b955050602061025888828901610145565b9450506040610269888289016101a3565b935050606086013567ffffffffffffffff81111561028a5761028961011f565b5b610296888289016101c7565b92509250509295509295909350565b6102ae81610124565b82525050565b60006020820190506102c960008301846102a5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61031d826102d4565b810181811067ffffffffffffffff8211171561033c5761033b6102e5565b5b80604052505050565b600061034f610110565b905061035b8282610314565b919050565b600062ffffff82169050919050565b61037881610360565b811461038357600080fd5b50565b6000813590506103958161036f565b92915050565b6103a48161015a565b81146103af57600080fd5b50565b6000813590506103c18161039b565b92915050565b600061010082840312156103de576103dd6102cf565b5b6103e9610100610345565b905060006103f9848285016101a3565b600083015250602061040d848285016101a3565b602083015250604061042184828501610386565b6040830152506060610435848285016101a3565b606083015250608061044984828501610145565b60808301525060a061045d84828501610145565b60a08301525060c061047184828501610145565b60c08301525060e0610485848285016103b2565b60e08301525092915050565b600061010082840312156104a8576104a761011a565b5b60006104b6848285016103c7565b91505092915050565b6104c88161017a565b82525050565b6104d781610360565b82525050565b6104e681610124565b82525050565b6104f58161015a565b82525050565b6101008201600082015161051260008501826104bf565b50602082015161052560208501826104bf565b50604082015161053860408501826104ce565b50606082015161054b60608501826104bf565b50608082015161055e60808501826104dd565b5060a082015161057160a08501826104dd565b5060c082015161058460c08501826104dd565b5060e082015161059760e08501826104ec565b50505050565b6000610100820190506105b360008301846104fb565b92915050565b6000815190506105c88161012e565b92915050565b6000602082840312156105e4576105e361011a565b5b60006105f2848285016105b9565b9150509291505056fea264697066735822122020eb969631035fd67ea3f7d1709d879e59a600b282a432494310713791023aae64736f6c63430008110033";

type PancakeRouterCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakeRouterCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PancakeRouterCall__factory extends ContractFactory {
  constructor(...args: PancakeRouterCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PancakeRouterCall> {
    return super.deploy(overrides || {}) as Promise<PancakeRouterCall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PancakeRouterCall {
    return super.attach(address) as PancakeRouterCall;
  }
  override connect(signer: Signer): PancakeRouterCall__factory {
    return super.connect(signer) as PancakeRouterCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeRouterCallInterface {
    return new utils.Interface(_abi) as PancakeRouterCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PancakeRouterCall {
    return new Contract(address, _abi, signerOrProvider) as PancakeRouterCall;
  }
}
