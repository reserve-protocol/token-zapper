/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DeployFolioHelper,
  DeployFolioHelperInterface,
} from "../../../contracts/weiroll-helpers/DeployFolioHelper";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "address",
            name: "expectedTokenAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "assets",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "initialShares",
                type: "uint256",
              },
            ],
            internalType: "struct IFolio.FolioBasicDetails",
            name: "basicDetails",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "auctionDelay",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "auctionLength",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "recipient",
                    type: "address",
                  },
                  {
                    internalType: "uint96",
                    name: "portion",
                    type: "uint96",
                  },
                ],
                internalType: "struct IFolio.FeeRecipient[]",
                name: "feeRecipients",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "tvlFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mintFee",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "mandate",
                type: "string",
              },
            ],
            internalType: "struct IFolio.FolioAdditionalDetails",
            name: "additionalDetails",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "existingTradeProposers",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "tradeLaunchers",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "vibesOfficers",
                type: "address[]",
              },
            ],
            internalType: "struct GovRoles",
            name: "govRoles",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isGoverned",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "specificData",
            type: "bytes",
          },
        ],
        internalType: "struct DeployFolioHelper.DeployFolioConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "deployFolio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cf6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633bee14b014610030575b600080fd5b61004a60048036038101906100459190610f49565b610060565b6040516100579190610fa1565b60405180910390f35b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b836040015160400151518110156101e957600084604001516040015182815181106100b7576100b6610fbc565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100f79190610ffa565b602060405180830381865afa158015610114573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610138919061102a565b90506000810361017d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610174906110b4565b60405180910390fd5b6000856040015160600151838151811061019a57610199610fbc565b5b60200260200101519050600081670de0b6b3a7640000846101bb9190611103565b6101c59190611174565b9050848110156101d3578094505b50505080806101e1906111a5565b915050610089565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810361024c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024390611239565b60405180910390fd5b80836040015160800181815250508260a00151156104215760008360c0015180602001905181019061027e919061142b565b90506000846000015173ffffffffffffffffffffffffffffffffffffffff166325fc853f836000015187604001518860600151866020015187604001518b608001516040518763ffffffff1660e01b81526004016102e1969594939291906119b2565b60c0604051808303816000875af1158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190611a2b565b50505050509050846020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461039d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039490611b04565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d69190610ffa565b602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610417919061102a565b93505050506105e1565b60008360c0015180602001905181019061043b9190611b60565b90506000846000015173ffffffffffffffffffffffffffffffffffffffff1663e45a297d8660400151876060015185600001518960800151600001518a60800151602001518b60800151604001516040518763ffffffff1660e01b81526004016104aa96959493929190611bfc565b60408051808303816000875af11580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190611c80565b509050846020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055890611b04565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161059a9190610ffa565b602060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db919061102a565b93505050505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610648826105ff565b810181811067ffffffffffffffff8211171561066757610666610610565b5b80604052505050565b600061067a6105e6565b9050610686828261063f565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106bb82610690565b9050919050565b6106cb816106b0565b81146106d657600080fd5b50565b6000813590506106e8816106c2565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561071357610712610610565b5b61071c826105ff565b9050602081019050919050565b82818337600083830152505050565b600061074b610746846106f8565b610670565b905082815260208101848484011115610767576107666106f3565b5b610772848285610729565b509392505050565b600082601f83011261078f5761078e6106ee565b5b813561079f848260208601610738565b91505092915050565b600067ffffffffffffffff8211156107c3576107c2610610565b5b602082029050602081019050919050565b600080fd5b60006107ec6107e7846107a8565b610670565b9050808382526020820190506020840283018581111561080f5761080e6107d4565b5b835b81811015610838578061082488826106d9565b845260208401935050602081019050610811565b5050509392505050565b600082601f830112610857576108566106ee565b5b81356108678482602086016107d9565b91505092915050565b600067ffffffffffffffff82111561088b5761088a610610565b5b602082029050602081019050919050565b6000819050919050565b6108af8161089c565b81146108ba57600080fd5b50565b6000813590506108cc816108a6565b92915050565b60006108e56108e084610870565b610670565b90508083825260208201905060208402830185811115610908576109076107d4565b5b835b81811015610931578061091d88826108bd565b84526020840193505060208101905061090a565b5050509392505050565b600082601f8301126109505761094f6106ee565b5b81356109608482602086016108d2565b91505092915050565b600060a0828403121561097f5761097e6105fa565b5b61098960a0610670565b9050600082013567ffffffffffffffff8111156109a9576109a861068b565b5b6109b58482850161077a565b600083015250602082013567ffffffffffffffff8111156109d9576109d861068b565b5b6109e58482850161077a565b602083015250604082013567ffffffffffffffff811115610a0957610a0861068b565b5b610a1584828501610842565b604083015250606082013567ffffffffffffffff811115610a3957610a3861068b565b5b610a458482850161093b565b6060830152506080610a59848285016108bd565b60808301525092915050565b600067ffffffffffffffff821115610a8057610a7f610610565b5b602082029050602081019050919050565b60006bffffffffffffffffffffffff82169050919050565b610ab281610a91565b8114610abd57600080fd5b50565b600081359050610acf81610aa9565b92915050565b600060408284031215610aeb57610aea6105fa565b5b610af56040610670565b90506000610b05848285016106d9565b6000830152506020610b1984828501610ac0565b60208301525092915050565b6000610b38610b3384610a65565b610670565b90508083825260208201905060408402830185811115610b5b57610b5a6107d4565b5b835b81811015610b845780610b708882610ad5565b845260208401935050604081019050610b5d565b5050509392505050565b600082601f830112610ba357610ba26106ee565b5b8135610bb3848260208601610b25565b91505092915050565b600060c08284031215610bd257610bd16105fa565b5b610bdc60c0610670565b90506000610bec848285016108bd565b6000830152506020610c00848285016108bd565b602083015250604082013567ffffffffffffffff811115610c2457610c2361068b565b5b610c3084828501610b8e565b6040830152506060610c44848285016108bd565b6060830152506080610c58848285016108bd565b60808301525060a082013567ffffffffffffffff811115610c7c57610c7b61068b565b5b610c888482850161077a565b60a08301525092915050565b600060608284031215610caa57610ca96105fa565b5b610cb46060610670565b9050600082013567ffffffffffffffff811115610cd457610cd361068b565b5b610ce084828501610842565b600083015250602082013567ffffffffffffffff811115610d0457610d0361068b565b5b610d1084828501610842565b602083015250604082013567ffffffffffffffff811115610d3457610d3361068b565b5b610d4084828501610842565b60408301525092915050565b60008115159050919050565b610d6181610d4c565b8114610d6c57600080fd5b50565b600081359050610d7e81610d58565b92915050565b600067ffffffffffffffff821115610d9f57610d9e610610565b5b610da8826105ff565b9050602081019050919050565b6000610dc8610dc384610d84565b610670565b905082815260208101848484011115610de457610de36106f3565b5b610def848285610729565b509392505050565b600082601f830112610e0c57610e0b6106ee565b5b8135610e1c848260208601610db5565b91505092915050565b600060e08284031215610e3b57610e3a6105fa565b5b610e4560e0610670565b90506000610e55848285016106d9565b6000830152506020610e69848285016106d9565b602083015250604082013567ffffffffffffffff811115610e8d57610e8c61068b565b5b610e9984828501610969565b604083015250606082013567ffffffffffffffff811115610ebd57610ebc61068b565b5b610ec984828501610bbc565b606083015250608082013567ffffffffffffffff811115610eed57610eec61068b565b5b610ef984828501610c94565b60808301525060a0610f0d84828501610d6f565b60a08301525060c082013567ffffffffffffffff811115610f3157610f3061068b565b5b610f3d84828501610df7565b60c08301525092915050565b600060208284031215610f5f57610f5e6105f0565b5b600082013567ffffffffffffffff811115610f7d57610f7c6105f5565b5b610f8984828501610e25565b91505092915050565b610f9b8161089c565b82525050565b6000602082019050610fb66000830184610f92565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610ff4816106b0565b82525050565b600060208201905061100f6000830184610feb565b92915050565b600081519050611024816108a6565b92915050565b6000602082840312156110405761103f6105f0565b5b600061104e84828501611015565b91505092915050565b600082825260208201905092915050565b7f5a45524f2042414c414e43450000000000000000000000000000000000000000600082015250565b600061109e600c83611057565b91506110a982611068565b602082019050919050565b600060208201905081810360008301526110cd81611091565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110e8261089c565b91506111198361089c565b92508282026111278161089c565b9150828204841483151761113e5761113d6110d4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061117f8261089c565b915061118a8361089c565b92508261119a57611199611145565b5b828204905092915050565b60006111b08261089c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111e2576111e16110d4565b5b600182019050919050565b7f4e4f205348415245530000000000000000000000000000000000000000000000600082015250565b6000611223600983611057565b915061122e826111ed565b602082019050919050565b6000602082019050818103600083015261125281611216565b9050919050565b6000611264826106b0565b9050919050565b61127481611259565b811461127f57600080fd5b50565b6000815190506112918161126b565b92915050565b600065ffffffffffff82169050919050565b6112b281611297565b81146112bd57600080fd5b50565b6000815190506112cf816112a9565b92915050565b600063ffffffff82169050919050565b6112ee816112d5565b81146112f957600080fd5b50565b60008151905061130b816112e5565b92915050565b600081519050611320816106c2565b92915050565b600060c0828403121561133c5761133b6105fa565b5b61134660c0610670565b90506000611356848285016112c0565b600083015250602061136a848285016112fc565b602083015250604061137e84828501611015565b604083015250606061139284828501611015565b60608301525060806113a684828501611015565b60808301525060a06113ba84828501611311565b60a08301525092915050565b60006101a082840312156113dd576113dc6105fa565b5b6113e76060610670565b905060006113f784828501611282565b600083015250602061140b84828501611326565b60208301525060e061141f84828501611326565b60408301525092915050565b60006101a08284031215611442576114416105f0565b5b6000611450848285016113c6565b91505092915050565b6000819050919050565b600061147e61147961147484610690565b611459565b610690565b9050919050565b600061149082611463565b9050919050565b60006114a282611485565b9050919050565b6114b281611497565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114f25780820151818401526020810190506114d7565b60008484015250505050565b6000611509826114b8565b61151381856114c3565b93506115238185602086016114d4565b61152c816105ff565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61156c816106b0565b82525050565b600061157e8383611563565b60208301905092915050565b6000602082019050919050565b60006115a282611537565b6115ac8185611542565b93506115b783611553565b8060005b838110156115e85781516115cf8882611572565b97506115da8361158a565b9250506001810190506115bb565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61162a8161089c565b82525050565b600061163c8383611621565b60208301905092915050565b6000602082019050919050565b6000611660826115f5565b61166a8185611600565b935061167583611611565b8060005b838110156116a657815161168d8882611630565b975061169883611648565b925050600181019050611679565b5085935050505092915050565b600060a08301600083015184820360008601526116d082826114fe565b915050602083015184820360208601526116ea82826114fe565b915050604083015184820360408601526117048282611597565b9150506060830151848203606086015261171e8282611655565b91505060808301516117336080860182611621565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61177381610a91565b82525050565b60408201600082015161178f6000850182611563565b5060208201516117a2602085018261176a565b50505050565b60006117b48383611779565b60408301905092915050565b6000602082019050919050565b60006117d88261173e565b6117e28185611749565b93506117ed8361175a565b8060005b8381101561181e57815161180588826117a8565b9750611810836117c0565b9250506001810190506117f1565b5085935050505092915050565b600060c0830160008301516118436000860182611621565b5060208301516118566020860182611621565b506040830151848203604086015261186e82826117cd565b91505060608301516118836060860182611621565b5060808301516118966080860182611621565b5060a083015184820360a08601526118ae82826114fe565b9150508091505092915050565b6118c481611297565b82525050565b6118d3816112d5565b82525050565b60c0820160008201516118ef60008501826118bb565b50602082015161190260208501826118ca565b5060408201516119156040850182611621565b5060608201516119286060850182611621565b50608082015161193b6080850182611621565b5060a082015161194e60a0850182611563565b50505050565b600060608301600083015184820360008601526119718282611597565b9150506020830151848203602086015261198b8282611597565b915050604083015184820360408601526119a58282611597565b9150508091505092915050565b6000610200820190506119c860008301896114a9565b81810360208301526119da81886116b3565b905081810360408301526119ee818761182b565b90506119fd60608301866118d9565b611a0b6101208301856118d9565b8181036101e0830152611a1e8184611954565b9050979650505050505050565b60008060008060008060c08789031215611a4857611a476105f0565b5b6000611a5689828a01611311565b9650506020611a6789828a01611311565b9550506040611a7889828a01611311565b9450506060611a8989828a01611311565b9350506080611a9a89828a01611311565b92505060a0611aab89828a01611311565b9150509295509295509295565b7f455850454354454420213d2041435455414c0000000000000000000000000000600082015250565b6000611aee601283611057565b9150611af982611ab8565b602082019050919050565b60006020820190508181036000830152611b1d81611ae1565b9050919050565b600060208284031215611b3a57611b396105fa565b5b611b446020610670565b90506000611b5484828501611311565b60008301525092915050565b600060208284031215611b7657611b756105f0565b5b6000611b8484828501611b24565b91505092915050565b600082825260208201905092915050565b6000611ba982611537565b611bb38185611b8d565b9350611bbe83611553565b8060005b83811015611bef578151611bd68882611572565b9750611be18361158a565b925050600181019050611bc2565b5085935050505092915050565b600060c0820190508181036000830152611c1681896116b3565b90508181036020830152611c2a818861182b565b9050611c396040830187610feb565b8181036060830152611c4b8186611b9e565b90508181036080830152611c5f8185611b9e565b905081810360a0830152611c738184611b9e565b9050979650505050505050565b60008060408385031215611c9757611c966105f0565b5b6000611ca585828601611311565b9250506020611cb685828601611311565b915050925092905056fea26469706673582212207708375b133b07dc60864f96c4435171c267dbd7960911bf7b6eaf5c54b46a0564736f6c63430008110033";

type DeployFolioHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployFolioHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployFolioHelper__factory extends ContractFactory {
  constructor(...args: DeployFolioHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeployFolioHelper> {
    return super.deploy(overrides || {}) as Promise<DeployFolioHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployFolioHelper {
    return super.attach(address) as DeployFolioHelper;
  }
  override connect(signer: Signer): DeployFolioHelper__factory {
    return super.connect(signer) as DeployFolioHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployFolioHelperInterface {
    return new utils.Interface(_abi) as DeployFolioHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployFolioHelper {
    return new Contract(address, _abi, signerOrProvider) as DeployFolioHelper;
  }
}
