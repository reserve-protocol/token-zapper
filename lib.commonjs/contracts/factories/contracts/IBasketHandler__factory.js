"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IBasketHandler__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "basketsHeldBy",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint192",
                        name: "bottom",
                        type: "uint192",
                    },
                    {
                        internalType: "uint192",
                        name: "top",
                        type: "uint192",
                    },
                ],
                internalType: "struct BasketRange",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "disableBasket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "fullyCollateralized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lotPrice",
        outputs: [
            {
                internalType: "uint192",
                name: "lotLow",
                type: "uint192",
            },
            {
                internalType: "uint192",
                name: "lotHigh",
                type: "uint192",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nonce",
        outputs: [
            {
                internalType: "uint48",
                name: "",
                type: "uint48",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "price",
        outputs: [
            {
                internalType: "uint192",
                name: "low",
                type: "uint192",
            },
            {
                internalType: "uint192",
                name: "high",
                type: "uint192",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "erc20",
                type: "address",
            },
        ],
        name: "quantity",
        outputs: [
            {
                internalType: "uint192",
                name: "",
                type: "uint192",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint192",
                name: "amount",
                type: "uint192",
            },
            {
                internalType: "enum RoundingMode",
                name: "rounding",
                type: "uint8",
            },
        ],
        name: "quote",
        outputs: [
            {
                internalType: "address[]",
                name: "erc20s",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "quantities",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "refreshBasket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "targetName",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "max",
                type: "uint256",
            },
            {
                internalType: "contract IERC20[]",
                name: "erc20s",
                type: "address[]",
            },
        ],
        name: "setBackupConfig",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20[]",
                name: "erc20s",
                type: "address[]",
            },
            {
                internalType: "uint192[]",
                name: "targetAmts",
                type: "uint192[]",
            },
        ],
        name: "setPrimeBasket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "status",
        outputs: [
            {
                internalType: "enum CollateralStatus",
                name: "status",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "timestamp",
        outputs: [
            {
                internalType: "uint48",
                name: "",
                type: "uint48",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IBasketHandler__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IBasketHandler__factory = IBasketHandler__factory;
//# sourceMappingURL=IBasketHandler__factory.js.map