/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IReadFacet,
  IReadFacetInterface,
} from "../../../contracts/IFacade.sol/IReadFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
    ],
    name: "basketTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "deposits",
        type: "uint256[]",
      },
      {
        internalType: "uint192[]",
        name: "depositsUoA",
        type: "uint192[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "maxIssuable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "maxIssuableByAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint192",
        name: "low",
        type: "uint192",
      },
      {
        internalType: "uint192",
        name: "high",
        type: "uint192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRToken",
        name: "rToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "withdrawals",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "available",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IReadFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IReadFacetInterface {
    return new utils.Interface(_abi) as IReadFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IReadFacet {
    return new Contract(address, _abi, signerOrProvider) as IReadFacet;
  }
}
