/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Univ2SwapHelper,
  Univ2SwapHelperInterface,
} from "../../../contracts/weiroll-helpers/Univ2SwapHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type Univ2SwapHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Univ2SwapHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Univ2SwapHelper__factory extends ContractFactory {
  constructor(...args: Univ2SwapHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Univ2SwapHelper> {
    return super.deploy(overrides || {}) as Promise<Univ2SwapHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Univ2SwapHelper {
    return super.attach(address) as Univ2SwapHelper;
  }
  override connect(signer: Signer): Univ2SwapHelper__factory {
    return super.connect(signer) as Univ2SwapHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Univ2SwapHelperInterface {
    return new utils.Interface(_abi) as Univ2SwapHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Univ2SwapHelper {
    return new Contract(address, _abi, signerOrProvider) as Univ2SwapHelper;
  }
}
