"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IConvexStakingWrapper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "N_COINS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "uint256",
                name: "minOut",
                type: "uint256",
            },
        ],
        name: "add_liquidity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
            {
                internalType: "bool",
                name: "isDeposit",
                type: "bool",
            },
        ],
        name: "calc_token_amount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amt",
                type: "uint256",
            },
            {
                internalType: "int128",
                name: "i",
                type: "int128",
            },
        ],
        name: "calc_withdraw_one_coin",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "i",
                type: "uint256",
            },
        ],
        name: "coins",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int128",
                name: "i",
                type: "int128",
            },
            {
                internalType: "int128",
                name: "j",
                type: "int128",
            },
            {
                internalType: "address",
                name: "pool",
                type: "address",
            },
        ],
        name: "dynamic_fee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int128",
                name: "i",
                type: "int128",
            },
            {
                internalType: "int128",
                name: "j",
                type: "int128",
            },
            {
                internalType: "uint256",
                name: "dy",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "pool",
                type: "address",
            },
        ],
        name: "get_dx",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int128",
                name: "i",
                type: "int128",
            },
            {
                internalType: "int128",
                name: "j",
                type: "int128",
            },
            {
                internalType: "uint256",
                name: "dx",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "pool",
                type: "address",
            },
        ],
        name: "get_dy",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "mintOuts",
                type: "uint256[]",
            },
        ],
        name: "remove_liquidity",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amt",
                type: "uint256",
            },
            {
                internalType: "int128",
                name: "i",
                type: "int128",
            },
            {
                internalType: "uint256",
                name: "mintOut",
                type: "uint256",
            },
        ],
        name: "remove_liquidity_one_coin",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IConvexStakingWrapper__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IConvexStakingWrapper__factory = IConvexStakingWrapper__factory;
//# sourceMappingURL=IConvexStakingWrapper__factory.js.map