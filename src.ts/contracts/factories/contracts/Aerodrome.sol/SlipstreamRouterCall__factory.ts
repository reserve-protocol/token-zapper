/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SlipstreamRouterCall,
  SlipstreamRouterCallInterface,
} from "../../../contracts/Aerodrome.sol/SlipstreamRouterCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedB",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encoding",
        type: "bytes",
      },
    ],
    name: "addLiquidityV2",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expected",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "exactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expected",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encodedRouterCall",
        type: "bytes",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "contract IAerodromeRouter",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encoding",
        type: "bytes",
      },
    ],
    name: "exactInputSingleV2",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115a6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634d49dcf8146100515780636919e67414610081578063b908e456146100b1578063bdd613d3146100e1575b600080fd5b61006b6004803603810190610066919061094f565b610111565b60405161007891906109f5565b60405180910390f35b61009b60048036038101906100969190610a70565b6102e5565b6040516100a891906109f5565b60405180910390f35b6100cb60048036038101906100c69190610af8565b610395565b6040516100d891906109f5565b60405180910390f35b6100fb60048036038101906100f69190610b8f565b6105cc565b60405161010891906109f5565b60405180910390f35b60008060008060008580602001905181019061012d9190610c9c565b93509350935093506000600167ffffffffffffffff81111561015257610151610824565b5b60405190808252806020026020018201604052801561018b57816020015b6101786106b7565b8152602001906001900390816101705790505b50905060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184151581526020018373ffffffffffffffffffffffffffffffffffffffff168152508160008151811061020757610206610d03565b5b602002602001018190525060008973ffffffffffffffffffffffffffffffffffffffff1663cac88ea98d8d858d6103e8426102429190610d61565b6040518663ffffffff1660e01b8152600401610262959493929190610ec6565b6000604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102aa9190610ff8565b905080600182516102bb9190611041565b815181106102cc576102cb610d03565b5b6020026020010151965050505050505095945050505050565b60008083838101906102f791906111a9565b9050868160a0018181525050858160c00181815250508473ffffffffffffffffffffffffffffffffffffffff1663a026383e826040518263ffffffff1660e01b815260040161034691906112a6565b6020604051808303816000875af1158015610365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038991906112c2565b91505095945050505050565b600080604051806101000160405280888152602001878152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905060008060008060008780602001905181019061043891906112ef565b9450945094509450945084866080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838660a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828660c0019015159081151581525050818660e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008173ffffffffffffffffffffffffffffffffffffffff16635a47ddc388608001518960a001518a60c001518b600001518c602001518d604001518e606001518f60e001516103e84261054e9190610d61565b6040518a63ffffffff1660e01b815260040161057299989796959493929190611379565b6060604051808303816000875af1158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190611406565b925050508097505050505050505095945050505050565b6000806040518060a001604052808481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016103e84261060a9190610d61565b815260200188815260200187815250905086816060018181525050858160800181815250508473ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b8152600401610668919061154e565b6020604051808303816000875af1158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906112c2565b91505095945050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61074a81610737565b811461075557600080fd5b50565b60008135905061076781610741565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107988261076d565b9050919050565b60006107aa8261078d565b9050919050565b6107ba8161079f565b81146107c557600080fd5b50565b6000813590506107d7816107b1565b92915050565b6107e68161078d565b81146107f157600080fd5b50565b600081359050610803816107dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61085c82610813565b810181811067ffffffffffffffff8211171561087b5761087a610824565b5b80604052505050565b600061088e610723565b905061089a8282610853565b919050565b600067ffffffffffffffff8211156108ba576108b9610824565b5b6108c382610813565b9050602081019050919050565b82818337600083830152505050565b60006108f26108ed8461089f565b610884565b90508281526020810184848401111561090e5761090d61080e565b5b6109198482856108d0565b509392505050565b600082601f83011261093657610935610809565b5b81356109468482602086016108df565b91505092915050565b600080600080600060a0868803121561096b5761096a61072d565b5b600061097988828901610758565b955050602061098a88828901610758565b945050604061099b888289016107c8565b93505060606109ac888289016107f4565b925050608086013567ffffffffffffffff8111156109cd576109cc610732565b5b6109d988828901610921565b9150509295509295909350565b6109ef81610737565b82525050565b6000602082019050610a0a60008301846109e6565b92915050565b600080fd5b600080fd5b60008083601f840112610a3057610a2f610809565b5b8235905067ffffffffffffffff811115610a4d57610a4c610a10565b5b602083019150836001820283011115610a6957610a68610a15565b5b9250929050565b600080600080600060808688031215610a8c57610a8b61072d565b5b6000610a9a88828901610758565b9550506020610aab88828901610758565b9450506040610abc888289016107f4565b935050606086013567ffffffffffffffff811115610add57610adc610732565b5b610ae988828901610a1a565b92509250509295509295909350565b600080600080600060a08688031215610b1457610b1361072d565b5b6000610b2288828901610758565b9550506020610b3388828901610758565b9450506040610b4488828901610758565b9350506060610b5588828901610758565b925050608086013567ffffffffffffffff811115610b7657610b75610732565b5b610b8288828901610921565b9150509295509295909350565b600080600080600060a08688031215610bab57610baa61072d565b5b6000610bb988828901610758565b9550506020610bca88828901610758565b9450506040610bdb888289016107f4565b9350506060610bec888289016107f4565b925050608086013567ffffffffffffffff811115610c0d57610c0c610732565b5b610c1988828901610921565b9150509295509295909350565b6000610c318261076d565b9050919050565b610c4181610c26565b8114610c4c57600080fd5b50565b600081519050610c5e81610c38565b92915050565b60008115159050919050565b610c7981610c64565b8114610c8457600080fd5b50565b600081519050610c9681610c70565b92915050565b60008060008060808587031215610cb657610cb561072d565b5b6000610cc487828801610c4f565b9450506020610cd587828801610c4f565b9350506040610ce687828801610c87565b9250506060610cf787828801610c4f565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6c82610737565b9150610d7783610737565b9250828201905080821115610d8f57610d8e610d32565b5b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610dca8161078d565b82525050565b610dd981610c64565b82525050565b608082016000820151610df56000850182610dc1565b506020820151610e086020850182610dc1565b506040820151610e1b6040850182610dd0565b506060820151610e2e6060850182610dc1565b50505050565b6000610e408383610ddf565b60808301905092915050565b6000602082019050919050565b6000610e6482610d95565b610e6e8185610da0565b9350610e7983610db1565b8060005b83811015610eaa578151610e918882610e34565b9750610e9c83610e4c565b925050600181019050610e7d565b5085935050505092915050565b610ec08161078d565b82525050565b600060a082019050610edb60008301886109e6565b610ee860208301876109e6565b8181036040830152610efa8186610e59565b9050610f096060830185610eb7565b610f1660808301846109e6565b9695505050505050565b600067ffffffffffffffff821115610f3b57610f3a610824565b5b602082029050602081019050919050565b600081519050610f5b81610741565b92915050565b6000610f74610f6f84610f20565b610884565b90508083825260208201905060208402830185811115610f9757610f96610a15565b5b835b81811015610fc05780610fac8882610f4c565b845260208401935050602081019050610f99565b5050509392505050565b600082601f830112610fdf57610fde610809565b5b8151610fef848260208601610f61565b91505092915050565b60006020828403121561100e5761100d61072d565b5b600082015167ffffffffffffffff81111561102c5761102b610732565b5b61103884828501610fca565b91505092915050565b600061104c82610737565b915061105783610737565b925082820390508181111561106f5761106e610d32565b5b92915050565b600080fd5b60008160020b9050919050565b6110908161107a565b811461109b57600080fd5b50565b6000813590506110ad81611087565b92915050565b6110bc8161076d565b81146110c757600080fd5b50565b6000813590506110d9816110b3565b92915050565b600061010082840312156110f6576110f5611075565b5b611101610100610884565b90506000611111848285016107f4565b6000830152506020611125848285016107f4565b60208301525060406111398482850161109e565b604083015250606061114d848285016107f4565b606083015250608061116184828501610758565b60808301525060a061117584828501610758565b60a08301525060c061118984828501610758565b60c08301525060e061119d848285016110ca565b60e08301525092915050565b600061010082840312156111c0576111bf61072d565b5b60006111ce848285016110df565b91505092915050565b6111e08161107a565b82525050565b6111ef81610737565b82525050565b6111fe8161076d565b82525050565b6101008201600082015161121b6000850182610dc1565b50602082015161122e6020850182610dc1565b50604082015161124160408501826111d7565b5060608201516112546060850182610dc1565b50608082015161126760808501826111e6565b5060a082015161127a60a08501826111e6565b5060c082015161128d60c08501826111e6565b5060e08201516112a060e08501826111f5565b50505050565b6000610100820190506112bc6000830184611204565b92915050565b6000602082840312156112d8576112d761072d565b5b60006112e684828501610f4c565b91505092915050565b600080600080600060a0868803121561130b5761130a61072d565b5b600061131988828901610c4f565b955050602061132a88828901610c4f565b945050604061133b88828901610c87565b935050606061134c88828901610c4f565b925050608061135d88828901610c4f565b9150509295509295909350565b61137381610c64565b82525050565b60006101208201905061138f600083018c610eb7565b61139c602083018b610eb7565b6113a9604083018a61136a565b6113b660608301896109e6565b6113c360808301886109e6565b6113d060a08301876109e6565b6113dd60c08301866109e6565b6113ea60e0830185610eb7565b6113f86101008301846109e6565b9a9950505050505050505050565b60008060006060848603121561141f5761141e61072d565b5b600061142d86828701610f4c565b935050602061143e86828701610f4c565b925050604061144f86828701610f4c565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611493578082015181840152602081019050611478565b60008484015250505050565b60006114aa82611459565b6114b48185611464565b93506114c4818560208601611475565b6114cd81610813565b840191505092915050565b600060a08301600083015184820360008601526114f5828261149f565b915050602083015161150a6020860182610dc1565b50604083015161151d60408601826111e6565b50606083015161153060608601826111e6565b50608083015161154360808601826111e6565b508091505092915050565b6000602082019050818103600083015261156881846114d8565b90509291505056fea2646970667358221220f67bb506341a97f698937b499f4fed562659fe82bf6d4e5ee0e1fc9aacd21cd264736f6c63430008110033";

type SlipstreamRouterCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SlipstreamRouterCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SlipstreamRouterCall__factory extends ContractFactory {
  constructor(...args: SlipstreamRouterCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SlipstreamRouterCall> {
    return super.deploy(overrides || {}) as Promise<SlipstreamRouterCall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SlipstreamRouterCall {
    return super.attach(address) as SlipstreamRouterCall;
  }
  override connect(signer: Signer): SlipstreamRouterCall__factory {
    return super.connect(signer) as SlipstreamRouterCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SlipstreamRouterCallInterface {
    return new utils.Interface(_abi) as SlipstreamRouterCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SlipstreamRouterCall {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SlipstreamRouterCall;
  }
}
