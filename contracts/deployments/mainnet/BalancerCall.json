{
  "address": "0x4d0889452f049e527756C90F81D7bE417B85F0df",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6150ed16725424d2ecef04ab9545ba3131313b8fa0d1d868895c574a51f74e36",
  "receipt": {
    "to": null,
    "from": "0xF2d98377d80DADf725bFb97E91357F1d81384De2",
    "contractAddress": "0x4d0889452f049e527756C90F81D7bE417B85F0df",
    "transactionIndex": 14,
    "gasUsed": "545959",
    "logsBloom": "0x
    "blockHash": "0x036686f1baadbf441bab2b833df106c1b172dff2d9cd51c4d4c5c3b5ae89da85",
    "transactionHash": "0x6150ed16725424d2ecef04ab9545ba3131313b8fa0d1d868895c574a51f74e36",
    "logs": [],
    "blockNumber": 21279257,
    "cumulativeGasUsed": "3948053",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "eb9b74ebcd8a2340bea670ca010c25b8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weiroll-helpers/BalancerCall.sol\":\"BalancerCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Balancer.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\ninterface IBalancerVault {\\n  enum SwapKind {\\n    GIVEN_IN,\\n    GIVEN_OUT\\n  }\\n\\n  struct PoolTokenInfo {\\n    uint256 cash;\\n    uint256 managed;\\n    uint256 lastChangeBlock;\\n    address assetManager;\\n  }\\n\\n  struct SingleSwap {\\n    bytes32 poolId;\\n    SwapKind kind;\\n    address assetIn;\\n    address assetOut;\\n    uint256 amount;\\n    bytes userData;\\n  }\\n\\n  struct FundManagement {\\n    address sender;\\n    bool fromInternalBalance;\\n    address payable recipient;\\n    bool toInternalBalance;\\n  }\\n\\n  function getPoolTokenInfo(\\n    bytes32 poolId,\\n    address token\\n  ) external view returns (PoolTokenInfo memory);\\n\\n  function swap(\\n    SingleSwap memory singleSwap,\\n    FundManagement memory funds,\\n    uint256 limit,\\n    uint256 deadline\\n)\\n    external\\n    payable\\n    returns (uint256 amountCalculated);\\n}\\n\\ninterface IBalancerQueries {\\n  function querySwap(\\n    IBalancerVault.SingleSwap memory singleSwap,\\n    IBalancerVault.FundManagement memory funds\\n  ) external returns (uint256);\\n}\",\"keccak256\":\"0x74ce2773d1a2bcbf3f63abf6e0381d6504fbf5b2849e87e441b0615662b95f1b\",\"license\":\"BlueOak-1.0.0\"},\"contracts/weiroll-helpers/BalancerCall.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\nimport { IBalancerVault } from \\\"../Balancer.sol\\\";\\n\\ncontract BalancerCall {\\n  struct StaticData {\\n    uint256 limit;\\n    address tokenIn;\\n    address tokenOut;\\n    bytes32 poolId;\\n    address payable recipient;\\n    uint256 deadline;\\n    IBalancerVault.SwapKind kind;\\n  }\\n  function swap(\\n    uint256 amountIn,\\n    bytes memory data\\n  ) external returns (uint256) {\\n    StaticData memory staticData = abi.decode(data, (StaticData));\\n    IBalancerVault.SingleSwap memory singleSwap = IBalancerVault.SingleSwap({\\n      poolId: staticData.poolId,\\n      kind: staticData.kind,\\n      assetIn: staticData.tokenIn,\\n      assetOut: staticData.tokenOut,\\n      amount: amountIn,\\n      userData: \\\"\\\"\\n    });\\n    IBalancerVault.FundManagement memory funds = IBalancerVault.FundManagement({\\n      sender: address(this),\\n      fromInternalBalance: false,\\n      recipient: staticData.recipient,\\n      toInternalBalance: false\\n    });\\n    return IBalancerVault(\\n      0xBA12222222228d8Ba445958a75a0704d566BF2C8\\n    ).swap(singleSwap, funds, staticData.limit, staticData.deadline);\\n  }\\n}\\n\",\"keccak256\":\"0x29828ceea2d78323edb8b2dd4f1ef4326f75dad9617e94c9411c98e3aa89f8d6\",\"license\":\"BlueOak-1.0.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bd0625ab14610030575b600080fd5b61004a6004803603810190610045919061039b565b610060565b6040516100579190610406565b60405180910390f35b6000808280602001905181019061007791906105e6565b905060006040518060c00160405280836060015181526020018360c0015160018111156100a7576100a6610613565b5b8152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604051806020016040528060008152508152509050600060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001846080015173ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250905073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff166352bbbe29838386600001518760a001516040518563ffffffff1660e01b81526004016101bd949392919061083e565b6020604051808303816000875af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610200919061088a565b935050505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102328161021f565b811461023d57600080fd5b50565b60008135905061024f81610229565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a88261025f565b810181811067ffffffffffffffff821117156102c7576102c6610270565b5b80604052505050565b60006102da61020b565b90506102e6828261029f565b919050565b600067ffffffffffffffff82111561030657610305610270565b5b61030f8261025f565b9050602081019050919050565b82818337600083830152505050565b600061033e610339846102eb565b6102d0565b90508281526020810184848401111561035a5761035961025a565b5b61036584828561031c565b509392505050565b600082601f83011261038257610381610255565b5b813561039284826020860161032b565b91505092915050565b600080604083850312156103b2576103b1610215565b5b60006103c085828601610240565b925050602083013567ffffffffffffffff8111156103e1576103e061021a565b5b6103ed8582860161036d565b9150509250929050565b6104008161021f565b82525050565b600060208201905061041b60008301846103f7565b92915050565b600080fd5b60008151905061043581610229565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104668261043b565b9050919050565b6104768161045b565b811461048157600080fd5b50565b6000815190506104938161046d565b92915050565b6000819050919050565b6104ac81610499565b81146104b757600080fd5b50565b6000815190506104c9816104a3565b92915050565b60006104da8261043b565b9050919050565b6104ea816104cf565b81146104f557600080fd5b50565b600081519050610507816104e1565b92915050565b6002811061051a57600080fd5b50565b60008151905061052c8161050d565b92915050565b600060e0828403121561054857610547610421565b5b61055260e06102d0565b9050600061056284828501610426565b600083015250602061057684828501610484565b602083015250604061058a84828501610484565b604083015250606061059e848285016104ba565b60608301525060806105b2848285016104f8565b60808301525060a06105c684828501610426565b60a08301525060c06105da8482850161051d565b60c08301525092915050565b600060e082840312156105fc576105fb610215565b5b600061060a84828501610532565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61064b81610499565b82525050565b6002811061066257610661610613565b5b50565b600081905061067382610651565b919050565b600061068382610665565b9050919050565b61069381610678565b82525050565b6106a28161045b565b82525050565b6106b18161021f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106f15780820151818401526020810190506106d6565b60008484015250505050565b6000610708826106b7565b61071281856106c2565b93506107228185602086016106d3565b61072b8161025f565b840191505092915050565b600060c08301600083015161074e6000860182610642565b506020830151610761602086018261068a565b5060408301516107746040860182610699565b5060608301516107876060860182610699565b50608083015161079a60808601826106a8565b5060a083015184820360a08601526107b282826106fd565b9150508091505092915050565b60008115159050919050565b6107d4816107bf565b82525050565b6107e3816104cf565b82525050565b6080820160008201516107ff6000850182610699565b50602082015161081260208501826107cb565b50604082015161082560408501826107da565b50606082015161083860608501826107cb565b50505050565b600060e08201905081810360008301526108588187610736565b905061086760208301866107e9565b61087460a08301856103f7565b61088160c08301846103f7565b95945050505050565b6000602082840312156108a05761089f610215565b5b60006108ae84828501610426565b9150509291505056fea2646970667358221220650eb6dc9ec632cb5c6102b9eeddf92a7fb9c2cd1f120951624b9582f3f18b9e64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bd0625ab14610030575b600080fd5b61004a6004803603810190610045919061039b565b610060565b6040516100579190610406565b60405180910390f35b6000808280602001905181019061007791906105e6565b905060006040518060c00160405280836060015181526020018360c0015160018111156100a7576100a6610613565b5b8152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015173ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604051806020016040528060008152508152509050600060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001846080015173ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250905073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff166352bbbe29838386600001518760a001516040518563ffffffff1660e01b81526004016101bd949392919061083e565b6020604051808303816000875af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610200919061088a565b935050505092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102328161021f565b811461023d57600080fd5b50565b60008135905061024f81610229565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a88261025f565b810181811067ffffffffffffffff821117156102c7576102c6610270565b5b80604052505050565b60006102da61020b565b90506102e6828261029f565b919050565b600067ffffffffffffffff82111561030657610305610270565b5b61030f8261025f565b9050602081019050919050565b82818337600083830152505050565b600061033e610339846102eb565b6102d0565b90508281526020810184848401111561035a5761035961025a565b5b61036584828561031c565b509392505050565b600082601f83011261038257610381610255565b5b813561039284826020860161032b565b91505092915050565b600080604083850312156103b2576103b1610215565b5b60006103c085828601610240565b925050602083013567ffffffffffffffff8111156103e1576103e061021a565b5b6103ed8582860161036d565b9150509250929050565b6104008161021f565b82525050565b600060208201905061041b60008301846103f7565b92915050565b600080fd5b60008151905061043581610229565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104668261043b565b9050919050565b6104768161045b565b811461048157600080fd5b50565b6000815190506104938161046d565b92915050565b6000819050919050565b6104ac81610499565b81146104b757600080fd5b50565b6000815190506104c9816104a3565b92915050565b60006104da8261043b565b9050919050565b6104ea816104cf565b81146104f557600080fd5b50565b600081519050610507816104e1565b92915050565b6002811061051a57600080fd5b50565b60008151905061052c8161050d565b92915050565b600060e0828403121561054857610547610421565b5b61055260e06102d0565b9050600061056284828501610426565b600083015250602061057684828501610484565b602083015250604061058a84828501610484565b604083015250606061059e848285016104ba565b60608301525060806105b2848285016104f8565b60808301525060a06105c684828501610426565b60a08301525060c06105da8482850161051d565b60c08301525092915050565b600060e082840312156105fc576105fb610215565b5b600061060a84828501610532565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61064b81610499565b82525050565b6002811061066257610661610613565b5b50565b600081905061067382610651565b919050565b600061068382610665565b9050919050565b61069381610678565b82525050565b6106a28161045b565b82525050565b6106b18161021f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106f15780820151818401526020810190506106d6565b60008484015250505050565b6000610708826106b7565b61071281856106c2565b93506107228185602086016106d3565b61072b8161025f565b840191505092915050565b600060c08301600083015161074e6000860182610642565b506020830151610761602086018261068a565b5060408301516107746040860182610699565b5060608301516107876060860182610699565b50608083015161079a60808601826106a8565b5060a083015184820360a08601526107b282826106fd565b9150508091505092915050565b60008115159050919050565b6107d4816107bf565b82525050565b6107e3816104cf565b82525050565b6080820160008201516107ff6000850182610699565b50602082015161081260208501826107cb565b50604082015161082560408501826107da565b50606082015161083860608501826107cb565b50505050565b600060e08201905081810360008301526108588187610736565b905061086760208301866107e9565b61087460a08301856103f7565b61088160c08301846103f7565b95945050505050565b6000602082840312156108a05761089f610215565b5b60006108ae84828501610426565b9150509291505056fea2646970667358221220650eb6dc9ec632cb5c6102b9eeddf92a7fb9c2cd1f120951624b9582f3f18b9e64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}