{
  "address": "0xe49aA049DA204E6dFF4A5AcdbD3935ec782F541f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAssetRegistry",
          "name": "assetRegistry",
          "type": "address"
        },
        {
          "internalType": "contract IBasketHandler",
          "name": "basketHandler",
          "type": "address"
        },
        {
          "internalType": "contract IRToken",
          "name": "rToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amtRToken",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "erc20s",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "quantities",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x93e143194101adac2048754377dab8b7f280d1538daa69a8120b71377bc78d64",
  "receipt": {
    "to": null,
    "from": "0xF2d98377d80DADf725bFb97E91357F1d81384De2",
    "contractAddress": "0xe49aA049DA204E6dFF4A5AcdbD3935ec782F541f",
    "transactionIndex": 8,
    "gasUsed": "784858",
    "logsBloom": "0x
    "blockHash": "0x7bc616254b750515d68267d4c0507b8f44511b89cbf5316f297abc6bc583d6ec",
    "transactionHash": "0x93e143194101adac2048754377dab8b7f280d1538daa69a8120b71377bc78d64",
    "logs": [],
    "blockNumber": 205340013,
    "cumulativeGasUsed": "2013063",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3661c71f63dbfa2c02fb035bba326ebb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAssetRegistry\",\"name\":\"assetRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IBasketHandler\",\"name\":\"basketHandler\",\"type\":\"address\"},{\"internalType\":\"contract IRToken\",\"name\":\"rToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amtRToken\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20s\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RTokenLens.sol\":\"RTokenLens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/IAssetRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IAssetRegistry\\n * @notice The AssetRegistry is in charge of maintaining the ERC20 tokens eligible\\n *   to be handled by the rest of the system. If an asset is in the registry, this means:\\n *      1. Its ERC20 contract has been vetted\\n *      2. The asset is the only asset for that ERC20\\n *      3. The asset can be priced in the UoA, usually via an oracle\\n */\\ninterface IAssetRegistry  {\\n    function refresh() external;\\n}\\n\",\"keccak256\":\"0xe8cf160ddd1151b56d52d515180e98486de84074eb870bf1e1cbf8f895f039d1\",\"license\":\"BlueOak-1.0.0\"},\"contracts/IBasketHandler.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\nenum RoundingMode {\\n    FLOOR, // Round towards zero\\n    ROUND, // Round to the nearest int\\n    CEIL // Round away from zero\\n}\\n\\n/**\\n * @title IBasketHandler\\n * @notice The BasketHandler aims to maintain a reference basket of constant target unit amounts.\\n * When a collateral token defaults, a new reference basket of equal target units is set.\\n * When _all_ collateral tokens default for a target unit, only then is the basket allowed to fall\\n *   in terms of target unit amounts. The basket is considered defaulted in this case.\\n */\\ninterface IBasketHandler {\\n    /// @param amount {BU}\\n    /// @return erc20s The addresses of the ERC20 tokens in the reference basket\\n    /// @return quantities {qTok} The quantity of each ERC20 token to issue `amount` baskets\\n    function quote(\\n        uint192 amount,\\n        RoundingMode rounding\\n    )\\n        external\\n        view\\n        returns (address[] memory erc20s, uint256[] memory quantities);\\n\\n    /// @return The current basket nonce, regardless of status\\n    function nonce() external view returns (uint48);\\n}\\n\",\"keccak256\":\"0xb647bb2c837046fb240c6d4feaa81a2ca7fd01bce33825e5ce377af9966fdbbb\",\"license\":\"BlueOak-1.0.0\"},\"contracts/IRToken.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\nimport { IERC20Metadata } from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n * @title IRToken\\n * @notice An RToken is an ERC20 that is permissionlessly issuable/redeemable and tracks an\\n *   exchange rate against a single unit: baskets, or {BU} in our type notation.\\n */\\ninterface IRToken is IERC20Metadata {\\n    function main() external view returns (address);\\n    function version() external pure returns (string memory);\\n    function issue(uint256 amount) external;\\n    function issueTo(address recipient, uint256 amount) external;\\n    function redeem(uint256 amount) external;\\n    function redeemTo(\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n    function mint(address recipient, uint256 amount) external;\\n    function basketsNeeded() external view returns (uint192);\\n}\\n\",\"keccak256\":\"0x05eec8c9fd06fbfdf744c2a3e39a778bd1d2f0fc38c8a9794381eb5c94c040e3\",\"license\":\"BlueOak-1.0.0\"},\"contracts/RTokenLens.sol\":{\"content\":\"// SPDX-License-Identifier: BlueOak-1.0.0\\npragma solidity 0.8.17;\\n\\nimport { IAssetRegistry } from \\\"./IAssetRegistry.sol\\\";\\nimport { IBasketHandler, RoundingMode } from \\\"./IBasketHandler.sol\\\";\\nimport { IRToken } from \\\"./IRToken.sol\\\";\\n\\ncontract RTokenLens {\\n    function redeem(\\n        IAssetRegistry assetRegistry,\\n        IBasketHandler basketHandler,\\n        IRToken rToken,\\n        uint256 amtRToken\\n    ) external returns (address[] memory erc20s, uint256[] memory quantities) {\\n        assetRegistry.refresh();\\n        uint256 amtBaskets = uint256(rToken.basketsNeeded()) * amtRToken / rToken.totalSupply(); // FLOOR\\n        (erc20s, quantities) = basketHandler.quote(uint192(amtBaskets), RoundingMode.FLOOR);\\n    }\\n}\\n\",\"keccak256\":\"0xe8931c1d171ed9829c0a807ee6d7b47e9f029cb91bb6f02b9e291cc0ee320d6c\",\"license\":\"BlueOak-1.0.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610aee806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ba036b4014610030575b600080fd5b61004a6004803603810190610045919061039f565b610061565b604051610058929190610582565b60405180910390f35b6060808573ffffffffffffffffffffffffffffffffffffffff1663f8ac93e86040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ac57600080fd5b505af11580156100c0573d6000803e3d6000fd5b5050505060008473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013591906105ce565b848673ffffffffffffffffffffffffffffffffffffffff16637121c2736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a5919061064b565b77ffffffffffffffffffffffffffffffffffffffffffffffff166101c991906106a7565b6101d39190610718565b90508573ffffffffffffffffffffffffffffffffffffffff1663c620f0fc8260006040518363ffffffff1660e01b81526004016102119291906107cf565b600060405180830381865afa15801561022e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102579190610a40565b80935081945050505094509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a88261027d565b9050919050565b60006102ba8261029d565b9050919050565b6102ca816102af565b81146102d557600080fd5b50565b6000813590506102e7816102c1565b92915050565b60006102f88261029d565b9050919050565b610308816102ed565b811461031357600080fd5b50565b600081359050610325816102ff565b92915050565b60006103368261029d565b9050919050565b6103468161032b565b811461035157600080fd5b50565b6000813590506103638161033d565b92915050565b6000819050919050565b61037c81610369565b811461038757600080fd5b50565b60008135905061039981610373565b92915050565b600080600080608085870312156103b9576103b8610273565b5b60006103c7878288016102d8565b94505060206103d887828801610316565b93505060406103e987828801610354565b92505060606103fa8782880161038a565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61043b8161029d565b82525050565b600061044d8383610432565b60208301905092915050565b6000602082019050919050565b600061047182610406565b61047b8185610411565b935061048683610422565b8060005b838110156104b757815161049e8882610441565b97506104a983610459565b92505060018101905061048a565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104f981610369565b82525050565b600061050b83836104f0565b60208301905092915050565b6000602082019050919050565b600061052f826104c4565b61053981856104cf565b9350610544836104e0565b8060005b8381101561057557815161055c88826104ff565b975061056783610517565b925050600181019050610548565b5085935050505092915050565b6000604082019050818103600083015261059c8185610466565b905081810360208301526105b08184610524565b90509392505050565b6000815190506105c881610373565b92915050565b6000602082840312156105e4576105e3610273565b5b60006105f2848285016105b9565b91505092915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610628816105fb565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b60006020828403121561066157610660610273565b5b600061066f84828501610636565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106b282610369565b91506106bd83610369565b92508282026106cb81610369565b915082820484148315176106e2576106e1610678565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061072382610369565b915061072e83610369565b92508261073e5761073d6106e9565b5b828204905092915050565b610752816105fb565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061079857610797610758565b5b50565b60008190506107a982610787565b919050565b60006107b98261079b565b9050919050565b6107c9816107ae565b82525050565b60006040820190506107e46000830185610749565b6107f160208301846107c0565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610846826107fd565b810181811067ffffffffffffffff821117156108655761086461080e565b5b80604052505050565b6000610878610269565b9050610884828261083d565b919050565b600067ffffffffffffffff8211156108a4576108a361080e565b5b602082029050602081019050919050565b600080fd5b6108c38161029d565b81146108ce57600080fd5b50565b6000815190506108e0816108ba565b92915050565b60006108f96108f484610889565b61086e565b9050808382526020820190506020840283018581111561091c5761091b6108b5565b5b835b81811015610945578061093188826108d1565b84526020840193505060208101905061091e565b5050509392505050565b600082601f830112610964576109636107f8565b5b81516109748482602086016108e6565b91505092915050565b600067ffffffffffffffff8211156109985761099761080e565b5b602082029050602081019050919050565b60006109bc6109b78461097d565b61086e565b905080838252602082019050602084028301858111156109df576109de6108b5565b5b835b81811015610a0857806109f488826105b9565b8452602084019350506020810190506109e1565b5050509392505050565b600082601f830112610a2757610a266107f8565b5b8151610a378482602086016109a9565b91505092915050565b60008060408385031215610a5757610a56610273565b5b600083015167ffffffffffffffff811115610a7557610a74610278565b5b610a818582860161094f565b925050602083015167ffffffffffffffff811115610aa257610aa1610278565b5b610aae85828601610a12565b915050925092905056fea2646970667358221220e926b663d7867d9d32d2a2ba156221bf7ddbc409bb815965bbc916d51b0f0bae64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ba036b4014610030575b600080fd5b61004a6004803603810190610045919061039f565b610061565b604051610058929190610582565b60405180910390f35b6060808573ffffffffffffffffffffffffffffffffffffffff1663f8ac93e86040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ac57600080fd5b505af11580156100c0573d6000803e3d6000fd5b5050505060008473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013591906105ce565b848673ffffffffffffffffffffffffffffffffffffffff16637121c2736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a5919061064b565b77ffffffffffffffffffffffffffffffffffffffffffffffff166101c991906106a7565b6101d39190610718565b90508573ffffffffffffffffffffffffffffffffffffffff1663c620f0fc8260006040518363ffffffff1660e01b81526004016102119291906107cf565b600060405180830381865afa15801561022e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102579190610a40565b80935081945050505094509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a88261027d565b9050919050565b60006102ba8261029d565b9050919050565b6102ca816102af565b81146102d557600080fd5b50565b6000813590506102e7816102c1565b92915050565b60006102f88261029d565b9050919050565b610308816102ed565b811461031357600080fd5b50565b600081359050610325816102ff565b92915050565b60006103368261029d565b9050919050565b6103468161032b565b811461035157600080fd5b50565b6000813590506103638161033d565b92915050565b6000819050919050565b61037c81610369565b811461038757600080fd5b50565b60008135905061039981610373565b92915050565b600080600080608085870312156103b9576103b8610273565b5b60006103c7878288016102d8565b94505060206103d887828801610316565b93505060406103e987828801610354565b92505060606103fa8782880161038a565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61043b8161029d565b82525050565b600061044d8383610432565b60208301905092915050565b6000602082019050919050565b600061047182610406565b61047b8185610411565b935061048683610422565b8060005b838110156104b757815161049e8882610441565b97506104a983610459565b92505060018101905061048a565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104f981610369565b82525050565b600061050b83836104f0565b60208301905092915050565b6000602082019050919050565b600061052f826104c4565b61053981856104cf565b9350610544836104e0565b8060005b8381101561057557815161055c88826104ff565b975061056783610517565b925050600181019050610548565b5085935050505092915050565b6000604082019050818103600083015261059c8185610466565b905081810360208301526105b08184610524565b90509392505050565b6000815190506105c881610373565b92915050565b6000602082840312156105e4576105e3610273565b5b60006105f2848285016105b9565b91505092915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610628816105fb565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b60006020828403121561066157610660610273565b5b600061066f84828501610636565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106b282610369565b91506106bd83610369565b92508282026106cb81610369565b915082820484148315176106e2576106e1610678565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061072382610369565b915061072e83610369565b92508261073e5761073d6106e9565b5b828204905092915050565b610752816105fb565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061079857610797610758565b5b50565b60008190506107a982610787565b919050565b60006107b98261079b565b9050919050565b6107c9816107ae565b82525050565b60006040820190506107e46000830185610749565b6107f160208301846107c0565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610846826107fd565b810181811067ffffffffffffffff821117156108655761086461080e565b5b80604052505050565b6000610878610269565b9050610884828261083d565b919050565b600067ffffffffffffffff8211156108a4576108a361080e565b5b602082029050602081019050919050565b600080fd5b6108c38161029d565b81146108ce57600080fd5b50565b6000815190506108e0816108ba565b92915050565b60006108f96108f484610889565b61086e565b9050808382526020820190506020840283018581111561091c5761091b6108b5565b5b835b81811015610945578061093188826108d1565b84526020840193505060208101905061091e565b5050509392505050565b600082601f830112610964576109636107f8565b5b81516109748482602086016108e6565b91505092915050565b600067ffffffffffffffff8211156109985761099761080e565b5b602082029050602081019050919050565b60006109bc6109b78461097d565b61086e565b905080838252602082019050602084028301858111156109df576109de6108b5565b5b835b81811015610a0857806109f488826105b9565b8452602084019350506020810190506109e1565b5050509392505050565b600082601f830112610a2757610a266107f8565b5b8151610a378482602086016109a9565b91505092915050565b60008060408385031215610a5757610a56610273565b5b600083015167ffffffffffffffff811115610a7557610a74610278565b5b610a818582860161094f565b925050602083015167ffffffffffffffff811115610aa257610aa1610278565b5b610aae85828601610a12565b915050925092905056fea2646970667358221220e926b663d7867d9d32d2a2ba156221bf7ddbc409bb815965bbc916d51b0f0bae64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}