/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBasketHandler,
  IBasketHandlerInterface,
} from "../IBasketHandler";

const _abi = [
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "amount",
        type: "uint192",
      },
      {
        internalType: "enum RoundingMode",
        name: "rounding",
        type: "uint8",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "address[]",
        name: "erc20s",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "quantities",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBasketHandler__factory {
  static readonly abi = _abi;
  static createInterface(): IBasketHandlerInterface {
    return new utils.Interface(_abi) as IBasketHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBasketHandler {
    return new Contract(address, _abi, signerOrProvider) as IBasketHandler;
  }
}
