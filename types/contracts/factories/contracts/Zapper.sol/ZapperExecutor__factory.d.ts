import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ZapperExecutor, ZapperExecutorInterface } from "../../../contracts/Zapper.sol/ZapperExecutor";
type ZapperExecutorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ZapperExecutor__factory extends ContractFactory {
    constructor(...args: ZapperExecutorConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ZapperExecutor>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): ZapperExecutor;
    connect(signer: Signer): ZapperExecutor__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161254861005d600039600050506125486000f3fe60806040526004361061008a5760003560e01c806398a38d7d1161005957806398a38d7d14610155578063ad207fd714610193578063b4146486146101bc578063b67d77c5146101e5578063d47b0de41461022257610091565b806308c4b49814610096578063298e2c9e146100c6578063771602f7146100ef57806394919ce81461012c57610091565b3661009157005b600080fd5b6100b060048036038101906100ab91906113f9565b61025f565b6040516100bd9190611597565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906115e5565b6103a4565b005b3480156100fb57600080fd5b50610116600480360381019061011191906115e5565b6103ea565b6040516101239190611634565b60405180910390f35b34801561013857600080fd5b50610153600480360381019061014e91906116f7565b610400565b005b34801561016157600080fd5b5061017c600480360381019061017791906117a0565b6104f5565b60405161018a9291906118ae565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b591906115e5565b610575565b005b3480156101c857600080fd5b506101e360048036038101906101de9190611934565b6105bb565b005b3480156101f157600080fd5b5061020c600480360381019061020791906115e5565b6105c1565b6040516102199190611634565b60405180910390f35b34801561022e57600080fd5b50610249600480360381019061024491906119a8565b6105d7565b6040516102569190611634565b60405180910390f35b610267611018565b6102728585856105f9565b50815167ffffffffffffffff81111561028e5761028d6110b5565b5b6040519080825280602002602001820160405280156102bc5781602001602082028036833780820191505090505b50816000018190525060005b825181101561039b578281815181106102e4576102e36119fb565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103249190611a39565b602060405180830381865afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190611a69565b8260000151828151811061037c5761037b6119fb565b5b602002602001018181525050808061039390611ac5565b9150506102c8565b50949350505050565b8082116103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90611b6a565b60405180910390fd5b5050565b600081836103f89190611b8a565b905092915050565b60008373ffffffffffffffffffffffffffffffffffffffff16631c3debf484306040518363ffffffff1660e01b815260040161043d929190611c1d565b6020604051808303816000875af115801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190611a69565b90508273ffffffffffffffffffffffffffffffffffffffff16631207f0c183836040518363ffffffff1660e01b81526004016104bd929190611c46565b600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b5050505050505050565b600060608573ffffffffffffffffffffffffffffffffffffffff16858585604051610521929190611c9f565b60006040518083038185875af1925050503d806000811461055e576040519150601f19603f3d011682016040523d82523d6000602084013e610563565b606091505b50809250819350505094509492505050565b8082146105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90611d04565b60405180910390fd5b5050565b50505050565b600081836105cf9190611d24565b905092915050565b60008183856105e69190611d58565b6105f09190611dc9565b90509392505050565b60606000806000806060600089899050905060005b81811015610aa7578a8a82818110610629576106286119fb565b5b905060200201359650602087901b60f81c60ff16955060006080871614610677578a8a828061065790611ac5565b9350818110610669576106686119fb565b5b9050602002013594506106a1565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff602888901b60001c1760001b94505b60006003871603610736578660001c73ffffffffffffffffffffffffffffffffffffffff166106db88878c610ab89092919063ffffffff16565b6040516106e89190611e2b565b600060405180830381855af49150503d8060008114610723576040519150601f19603f3d011682016040523d82523d6000602084013e610728565b606091505b5080945081955050506109b7565b600160038716036107cd578660001c73ffffffffffffffffffffffffffffffffffffffff1661077088878c610ab89092919063ffffffff16565b60405161077d9190611e2b565b6000604051808303816000865af19150503d80600081146107ba576040519150601f19603f3d011682016040523d82523d6000602084013e6107bf565b606091505b5080945081955050506109b6565b60026003871603610862578660001c73ffffffffffffffffffffffffffffffffffffffff1661080788878c610ab89092919063ffffffff16565b6040516108149190611e2b565b600060405180830381855afa9150503d806000811461084f576040519150601f19603f3d011682016040523d82523d6000602084013e610854565b606091505b5080945081955050506109b5565b600380871603610979576000808a8760f81c60ff1681518110610888576108876119fb565b5b6020026020010151905060208151146108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90611eb4565b60405180910390fd5b602081015191508860001c73ffffffffffffffffffffffffffffffffffffffff168261091a8b60ff60088c901b60001c1760001b8f610ab89092919063ffffffff16565b6040516109279190611e2b565b60006040518083038185875af1925050503d8060008114610964576040519150601f19603f3d011682016040523d82523d6000602084013e610969565b606091505b50809650819750505050506109b4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90611f20565b60405180910390fd5b5b5b5b83610a57576000835111156109cd576044830192505b60008760001c6000855111610a17576040518060400160405280600781526020017f556e6b6e6f776e00000000000000000000000000000000000000000000000000815250610a19565b845b6040517fef3dcb2f000000000000000000000000000000000000000000000000000000008152600401610a4e93929190611fbf565b60405180910390fd5b60006040871614610a8057610a7b605888901b848b610e1c9092919063ffffffff16565b610a9c565b610a99605888901b848b610ed19092919063ffffffff16565b98505b80600101905061060e565b508796505050505050509392505050565b606060008060606000805b6020811015610c5c57868160208110610adf57610ade6119fb565b5b1a60f81b60f81c60ff16915060ff820315610c5c5760006080831614610bda5760fe8203610b47576000835103610b335788604051602001610b219190612109565b60405160208183030381529060405292505b825185610b409190611b8a565b9450610bd5565b600089607f841681518110610b5f57610b5e6119fb565b5b60200260200101515190506000602082610b79919061212b565b14610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb0906121ce565b60405180910390fd5b602081610bc69190611b8a565b86610bd19190611b8a565b9550505b610c4b565b602089607f841681518110610bf257610bf16119fb565b5b60200260200101515114610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3290612260565b60405180910390fd5b602085610c489190611b8a565b94505b602084019350806001019050610ac3565b50600484610c6a9190611b8a565b67ffffffffffffffff811115610c8357610c826110b5565b5b6040519080825280601f01601f191660200182016040528015610cb55781602001600182028036833780820191505090505b5094508660208601526000935060005b6020811015610e1057868160208110610ce157610ce06119fb565b5b1a60f81b60f81c60ff16915060ff820315610e105760006080831614610dcf5760fe8203610d58578385602488010152610d3883602088600488610d259190611b8a565b60208851610d339190611d24565b610ffe565b60208351610d469190611d24565b84610d519190611b8a565b9350610dca565b600089607f841681518110610d7057610d6f6119fb565b5b60200260200101515190508486602489010152610dba8a607f851681518110610d9c57610d9b6119fb565b5b6020026020010151600089600489610db49190611b8a565b85610ffe565b8085610dc69190611b8a565b9450505b610dff565b600089607f841681518110610de757610de66119fb565b5b60200260200101519050602081015186602489010152505b602085019450806001019050610cc5565b50505050509392505050565b60008260f81c60ff16905060ff8103610e355750610ecc565b600060208351610e459190611b8a565b67ffffffffffffffff811115610e5e57610e5d6110b5565b5b6040519080825280601f01601f191660200182016040528015610e905781602001600182028036833780820191505090505b50858381518110610ea457610ea36119fb565b5b602002602001018190529050610ec08360008360208751610ffe565b82518060208301525050505b505050565b606060008360f81c60ff16905060ff8103610eef5784915050610ff7565b60006080821614610f8b5760fe8103610f1d5782806020019051810190610f1691906123a5565b9450610f86565b60006020840151905060208114610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6090612460565b60405180910390fd5b60208451036020850152602084016020607f841602602088010152505b610ff2565b6020835114610fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc6906124f2565b60405180910390fd5b8285607f831681518110610fe657610fe56119fb565b5b60200260200101819052505b849150505b9392505050565b808260208501018286602089010160045afa505050505050565b6040518060200160405280606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126110645761106361103f565b5b8235905067ffffffffffffffff81111561108157611080611044565b5b60208301915083602082028301111561109d5761109c611049565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110ed826110a4565b810181811067ffffffffffffffff8211171561110c5761110b6110b5565b5b80604052505050565b600061111f61102b565b905061112b82826110e4565b919050565b600067ffffffffffffffff82111561114b5761114a6110b5565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff82111561117c5761117b6110b5565b5b611185826110a4565b9050602081019050919050565b82818337600083830152505050565b60006111b46111af84611161565b611115565b9050828152602081018484840111156111d0576111cf61115c565b5b6111db848285611192565b509392505050565b600082601f8301126111f8576111f761103f565b5b81356112088482602086016111a1565b91505092915050565b600061122461121f84611130565b611115565b9050808382526020820190506020840283018581111561124757611246611049565b5b835b8181101561128e57803567ffffffffffffffff81111561126c5761126b61103f565b5b80860161127989826111e3565b85526020850194505050602081019050611249565b5050509392505050565b600082601f8301126112ad576112ac61103f565b5b81356112bd848260208601611211565b91505092915050565b600067ffffffffffffffff8211156112e1576112e06110b5565b5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061131d826112f2565b9050919050565b600061132f82611312565b9050919050565b61133f81611324565b811461134a57600080fd5b50565b60008135905061135c81611336565b92915050565b6000611375611370846112c6565b611115565b9050808382526020820190506020840283018581111561139857611397611049565b5b835b818110156113c157806113ad888261134d565b84526020840193505060208101905061139a565b5050509392505050565b600082601f8301126113e0576113df61103f565b5b81356113f0848260208601611362565b91505092915050565b6000806000806060858703121561141357611412611035565b5b600085013567ffffffffffffffff8111156114315761143061103a565b5b61143d8782880161104e565b9450945050602085013567ffffffffffffffff8111156114605761145f61103a565b5b61146c87828801611298565b925050604085013567ffffffffffffffff81111561148d5761148c61103a565b5b611499878288016113cb565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6114e4816114d1565b82525050565b60006114f683836114db565b60208301905092915050565b6000602082019050919050565b600061151a826114a5565b61152481856114b0565b935061152f836114c1565b8060005b8381101561156057815161154788826114ea565b975061155283611502565b925050600181019050611533565b5085935050505092915050565b6000602083016000830151848203600086015261158a828261150f565b9150508091505092915050565b600060208201905081810360008301526115b1818461156d565b905092915050565b6115c2816114d1565b81146115cd57600080fd5b50565b6000813590506115df816115b9565b92915050565b600080604083850312156115fc576115fb611035565b5b600061160a858286016115d0565b925050602061161b858286016115d0565b9150509250929050565b61162e816114d1565b82525050565b60006020820190506116496000830184611625565b92915050565b600061165a82611312565b9050919050565b61166a8161164f565b811461167557600080fd5b50565b60008135905061168781611661565b92915050565b600061169882611312565b9050919050565b6116a88161168d565b81146116b357600080fd5b50565b6000813590506116c58161169f565b92915050565b6116d481611312565b81146116df57600080fd5b50565b6000813590506116f1816116cb565b92915050565b6000806000606084860312156117105761170f611035565b5b600061171e86828701611678565b935050602061172f868287016116b6565b9250506040611740868287016116e2565b9150509250925092565b60008083601f8401126117605761175f61103f565b5b8235905067ffffffffffffffff81111561177d5761177c611044565b5b60208301915083600182028301111561179957611798611049565b5b9250929050565b600080600080606085870312156117ba576117b9611035565b5b60006117c8878288016116e2565b94505060206117d9878288016115d0565b935050604085013567ffffffffffffffff8111156117fa576117f961103a565b5b6118068782880161174a565b925092505092959194509250565b60008115159050919050565b61182981611814565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186957808201518184015260208101905061184e565b60008484015250505050565b60006118808261182f565b61188a818561183a565b935061189a81856020860161184b565b6118a3816110a4565b840191505092915050565b60006040820190506118c36000830185611820565b81810360208301526118d58184611875565b90509392505050565b60008083601f8401126118f4576118f361103f565b5b8235905067ffffffffffffffff81111561191157611910611044565b5b60208301915083602082028301111561192d5761192c611049565b5b9250929050565b6000806000806060858703121561194e5761194d611035565b5b600061195c878288016116b6565b945050602061196d878288016116e2565b935050604085013567ffffffffffffffff81111561198e5761198d61103a565b5b61199a878288016118de565b925092505092959194509250565b6000806000606084860312156119c1576119c0611035565b5b60006119cf868287016115d0565b93505060206119e0868287016115d0565b92505060406119f1868287016115d0565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b611a3381611312565b82525050565b6000602082019050611a4e6000830184611a2a565b92915050565b600081519050611a63816115b9565b92915050565b600060208284031215611a7f57611a7e611035565b5b6000611a8d84828501611a54565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ad0826114d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b0257611b01611a96565b5b600182019050919050565b600082825260208201905092915050565b7f214153534552545f475400000000000000000000000000000000000000000000600082015250565b6000611b54600a83611b0d565b9150611b5f82611b1e565b602082019050919050565b60006020820190508181036000830152611b8381611b47565b9050919050565b6000611b95826114d1565b9150611ba0836114d1565b9250828201905080821115611bb857611bb7611a96565b5b92915050565b6000819050919050565b6000611be3611bde611bd9846112f2565b611bbe565b6112f2565b9050919050565b6000611bf582611bc8565b9050919050565b6000611c0782611bea565b9050919050565b611c1781611bfc565b82525050565b6000604082019050611c326000830185611c0e565b611c3f6020830184611a2a565b9392505050565b6000604082019050611c5b6000830185611a2a565b611c686020830184611625565b9392505050565b600081905092915050565b6000611c868385611c6f565b9350611c93838584611192565b82840190509392505050565b6000611cac828486611c7a565b91508190509392505050565b7f214153534552545f455100000000000000000000000000000000000000000000600082015250565b6000611cee600a83611b0d565b9150611cf982611cb8565b602082019050919050565b60006020820190508181036000830152611d1d81611ce1565b9050919050565b6000611d2f826114d1565b9150611d3a836114d1565b9250828203905081811115611d5257611d51611a96565b5b92915050565b6000611d63826114d1565b9150611d6e836114d1565b9250828202611d7c816114d1565b91508282048414831517611d9357611d92611a96565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dd4826114d1565b9150611ddf836114d1565b925082611def57611dee611d9a565b5b828204905092915050565b6000611e058261182f565b611e0f8185611c6f565b9350611e1f81856020860161184b565b80840191505092915050565b6000611e378284611dfa565b915081905092915050565b7f5f657865637574653a2076616c75652063616c6c20686173206e6f2076616c7560008201527f6520696e646963617465642e0000000000000000000000000000000000000000602082015250565b6000611e9e602c83611b0d565b9150611ea982611e42565b604082019050919050565b60006020820190508181036000830152611ecd81611e91565b9050919050565b7f496e76616c69642063616c6c7479706500000000000000000000000000000000600082015250565b6000611f0a601083611b0d565b9150611f1582611ed4565b602082019050919050565b60006020820190508181036000830152611f3981611efd565b9050919050565b6000819050919050565b6000611f65611f60611f5b84611f40565b611bbe565b6114d1565b9050919050565b611f7581611f4a565b82525050565b600081519050919050565b6000611f9182611f7b565b611f9b8185611b0d565b9350611fab81856020860161184b565b611fb4816110a4565b840191505092915050565b6000606082019050611fd46000830186611f6c565b611fe16020830185611a2a565b8181036040830152611ff38184611f86565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006120458261182f565b61204f8185612029565b935061205f81856020860161184b565b612068816110a4565b840191505092915050565b600061207f838361203a565b905092915050565b6000602082019050919050565b600061209f82611ffd565b6120a98185612008565b9350836020820285016120bb85612019565b8060005b858110156120f757848403895281516120d88582612073565b94506120e383612087565b925060208a019950506001810190506120bf565b50829750879550505050505092915050565b600060208201905081810360008301526121238184612094565b905092915050565b6000612136826114d1565b9150612141836114d1565b92508261215157612150611d9a565b5b828206905092915050565b7f44796e616d6963207374617465207661726961626c6573206d7573742062652060008201527f61206d756c7469706c65206f6620333220627974657300000000000000000000602082015250565b60006121b8603683611b0d565b91506121c38261215c565b604082019050919050565b600060208201905081810360008301526121e7816121ab565b9050919050565b7f537461746963207374617465207661726961626c6573206d757374206265203360008201527f3220627974657300000000000000000000000000000000000000000000000000602082015250565b600061224a602783611b0d565b9150612255826121ee565b604082019050919050565b600060208201905081810360008301526122798161223d565b9050919050565b600061229361228e84611161565b611115565b9050828152602081018484840111156122af576122ae61115c565b5b6122ba84828561184b565b509392505050565b600082601f8301126122d7576122d661103f565b5b81516122e7848260208601612280565b91505092915050565b60006123036122fe84611130565b611115565b9050808382526020820190506020840283018581111561232657612325611049565b5b835b8181101561236d57805167ffffffffffffffff81111561234b5761234a61103f565b5b80860161235889826122c2565b85526020850194505050602081019050612328565b5050509392505050565b600082601f83011261238c5761238b61103f565b5b815161239c8482602086016122f0565b91505092915050565b6000602082840312156123bb576123ba611035565b5b600082015167ffffffffffffffff8111156123d9576123d861103a565b5b6123e584828501612377565b91505092915050565b7f4f6e6c79206f6e652072657475726e2076616c7565207065726d69747465642060008201527f287661726961626c652900000000000000000000000000000000000000000000602082015250565b600061244a602a83611b0d565b9150612455826123ee565b604082019050919050565b600060208201905081810360008301526124798161243d565b9050919050565b7f4f6e6c79206f6e652072657475726e2076616c7565207065726d69747465642060008201527f2873746174696329000000000000000000000000000000000000000000000000602082015250565b60006124dc602883611b0d565b91506124e782612480565b604082019050919050565b6000602082019050818103600083015261250b816124cf565b905091905056fea2646970667358221220eb789d8742b0b60e561335960a12335459cb82259dd0e0d56ecb16ffd79b265064736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "command_index";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "ExecutionFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "a";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "b";
            readonly type: "uint256";
        }];
        readonly name: "add";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "a";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "b";
            readonly type: "uint256";
        }];
        readonly name: "assertEqual";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "a";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "b";
            readonly type: "uint256";
        }];
        readonly name: "assertLarger";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "commands";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "state";
            readonly type: "bytes[]";
        }, {
            readonly internalType: "contract IERC20[]";
            readonly name: "tokens";
            readonly type: "address[]";
        }];
        readonly name: "execute";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "dust";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct ExecuteOutput";
            readonly name: "out";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "a";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "b";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "scale";
            readonly type: "uint256";
        }];
        readonly name: "fpMul";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract RToken";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "amts";
            readonly type: "uint256[]";
        }];
        readonly name: "issueRToken";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract FacadeRead";
            readonly name: "facade";
            readonly type: "address";
        }, {
            readonly internalType: "contract RToken";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "mintMaxRToken";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "rawCall";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "out";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "a";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "b";
            readonly type: "uint256";
        }];
        readonly name: "sub";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): ZapperExecutorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZapperExecutor;
}
export {};
//# sourceMappingURL=ZapperExecutor__factory.d.ts.map